{"version":3,"file":"index.js","sources":["../src/displays/helpers/LottieGraphicsMask.js","../src/displays/helpers/PreCompMask.js","../src/displays/core/CompElement.js","../src/displays/graphics/webgl/shaders/PrimitiveShader.js","../src/displays/graphics/webgl/WebGLGraphicsData.js","../src/displays/graphics/webgl/utils.js","../src/displays/graphics/webgl/PathToStroke.js","../src/displays/graphics/webgl/PathToShape.js","../src/displays/graphics/webgl/LottieGraphicsRenderer.js","../src/displays/graphics/canvas/CanvasLottieGraphicsRenderer.js","../src/displays/graphics/PathCMD.js","../src/displays/graphics/LottieGraphics.js","../src/displays/core/PathLottie.js","../src/displays/core/SolidElement.js","../src/displays/core/SpriteElement.js","../src/displays/index.js","../src/loader/Loader.js","../src/loader/index.js","../src/animation/Tween.js","../src/animation/Animator.js","../src/animation/Transition.js","../src/animation/Bodymovin.js","../src/animation/Queues.js","../src/animation/ticker.js","../src/animation/Animations.js","../src/patch/DisplayObject.js","../src/patch/Container.js","../src/loadAnimation.js"],"sourcesContent":["// import { Graphics } from '@pixi/graphics';\nimport {\n  Graphics,\n} from 'pixi.js';\n\n/**\n * Lottie Graphics Mask\n * @private\n */\nexport default class LottieGraphicsMask extends Graphics {\n  /**\n   * a\n   * @param {*} parentCompBox a\n   */\n  constructor(parentCompBox) {\n    super();\n    this.parentCompBox = parentCompBox;\n    this.lineStyle(0);\n  }\n\n  /**\n   * a\n   * @param {*} masks a\n   */\n  updateLayerMask(masks) {\n    for (let i = 0; i < masks.viewData.length; i++) {\n      if (masks.viewData[i].inv) {\n        const size = this.parentCompBox;\n        this.moveTo(0, 0);\n        this.lineTo(size.w, 0);\n        this.lineTo(size.w, size.h);\n        this.lineTo(0, size.h);\n        this.lineTo(0, 0);\n      }\n\n      const data = masks.viewData[i].v;\n      const start = data.v[0];\n      this.moveTo(start[0], start[1]);\n      const jLen = data._length;\n      let j = 1;\n      for (; j < jLen; j++) {\n        const oj = data.o[j - 1];\n        const ij = data.i[j];\n        const vj = data.v[j];\n        this.bezierCurveTo(oj[0], oj[1], ij[0], ij[1], vj[0], vj[1]);\n      }\n      const oj = data.o[j - 1];\n      const ij = data.i[0];\n      const vj = data.v[0];\n      this.bezierCurveTo(oj[0], oj[1], ij[0], ij[1], vj[0], vj[1]);\n\n      if (masks.viewData[i].inv) {\n        this.addHole();\n      }\n    }\n  }\n\n  /**\n   * a\n   * @param {*} masks a\n   */\n  updateMasks(masks) {\n    this.clear();\n    this.beginFill(0x000000);\n\n    this.updateLayerMask(masks);\n\n    this.endFill();\n  }\n}\n","// import { Graphics } from '@pixi/graphics';\nimport {\n  Graphics,\n} from 'pixi.js';\n\n/**\n * Lottie Graphics Mask\n * @private\n */\nexport default class PreCompMask extends Graphics {\n  /**\n   * a\n   * @param {*} viewport a\n   */\n  constructor(viewport) {\n    super();\n    this.viewport = viewport;\n    this.lineStyle(0);\n    this.initCompMask();\n  }\n\n  /**\n   * init pre-comp mask\n   */\n  initCompMask() {\n    this.clear();\n    this.beginFill(0x000000);\n\n    const size = this.viewport;\n    this.moveTo(0, 0);\n    this.lineTo(size.w, 0);\n    this.lineTo(size.w, size.h);\n    this.lineTo(0, size.h);\n    this.lineTo(0, 0);\n\n    this.endFill();\n  }\n}\n","import {\n  Container,\n  // Graphics,\n  // Sprite,\n  // Rectangle,\n  // Matrix,\n} from 'pixi.js';\nimport LottieGraphicsMask from '../helpers/LottieGraphicsMask';\nimport PreCompMask from '../helpers/PreCompMask';\n\n/**\n * CompElement class\n * @class\n * @private\n */\nexport default class CompElement extends Container {\n  /**\n   * CompElement constructor\n   * @param {object} lottieElement lottie element object\n   * @param {object} config layer data information\n   */\n  constructor(lottieElement, config) {\n    super();\n    this.lottieElement = lottieElement;\n    this.config = config;\n  }\n\n  /**\n   * call it when this layer had finish lottie parse\n   */\n  onSetupLottie() {\n    if (this.config.maskComp) {\n      const viewport = this.config.viewport;\n      this.preCompMask = new PreCompMask(viewport);\n      this.mask = this.preCompMask;\n      this.addChild(this.mask);\n    }\n    if (this.lottieElement.hasValidMasks()) {\n      const parentCompBox = this.config.session.local;\n      this.graphicsMasks = new LottieGraphicsMask(parentCompBox);\n      if (this.mask) {\n        const innerDisplay = new Container();\n        innerDisplay.mask = this.graphicsMasks;\n        innerDisplay.addChild(this.mask);\n        this.lottieElement.innerDisplay = innerDisplay;\n        this.addChild(innerDisplay);\n      } else {\n        this.mask = this.graphicsMasks;\n        this.addChild(this.mask);\n      }\n    }\n  }\n\n  /**\n   * a\n   * @param {*} parent a\n   */\n  setHierarchy(parent) {\n    this.hierarchy = parent;\n  }\n\n  /**\n   * a\n   */\n  show() {\n    this.visible = true;\n  }\n\n  /**\n   * a\n   */\n  hide() {\n    this.visible = false;\n  }\n\n  /**\n   * a\n   * @param {*} transform\n   */\n  updateLottieTransform(transform) {\n    this.x = transform.x;\n    this.y = transform.y;\n    this.pivot.x = transform.anchorX;\n    this.pivot.y = transform.anchorY;\n    this.scale.x = transform.scaleX;\n    this.scale.y = transform.scaleY;\n    this.rotation = transform.rotation;\n    this.alpha = transform.alpha;\n  }\n\n  /**\n   * a\n   * @param {*} masks a\n   */\n  updateLottieMasks(masks) {\n    if (!this.graphicsMasks) return;\n    this.graphicsMasks.updateMasks(masks);\n  }\n}\n","import {\n  Shader,\n} from 'pixi.js';\n\n/**\n * This shader is used to draw simple primitive shapes for {@link PIXI.Graphics}.\n *\n * @class\n * @private\n * @extends Shader\n */\nexport default class PrimitiveShader extends Shader {\n  /**\n   * @param {WebGLRenderingContext} gl - The webgl shader manager this shader works for.\n   */\n  constructor(gl) {\n    super(gl,\n        // vertex shader\n        [\n          'attribute vec2 aVertexPosition;',\n\n          'uniform mat3 translationMatrix;',\n          'uniform mat3 projectionMatrix;',\n\n          'void main(void){',\n          '   gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);',\n          '}',\n        ].join('\\n'),\n        // fragment shader\n        [\n          'uniform float alpha;',\n          'uniform vec3 color;',\n\n          'void main(void){',\n          '   gl_FragColor = vec4(color * alpha, alpha);',\n          '}',\n        ].join('\\n')\n    );\n  }\n}\n","import {\n  glCore,\n} from 'pixi.js';\n\n/**\n * a\n * @private\n * @param {*} BufferType a\n * @param {*} length a\n */\nfunction TypedArray(BufferType, length) {\n  if (!length) length = 10;\n  this.buffer = new BufferType(10);\n  this.length = 0;\n}\n\nTypedArray.prototype = {\n  reset() {\n    this.length = 0;\n  },\n  destroy() {\n    this.buffer = null;\n    this.length = 0;\n  },\n  push(...reset) {\n    if (this.length + reset.length > this.buffer.length) {\n      // grow buffer\n      const newBuffer = new this.buffer.constructor(Math.max(this.length+reset.length, Math.round(this.buffer.length * 2)));\n      newBuffer.set(this.buffer, 0);\n      this.buffer = newBuffer;\n    }\n    for (let i = 0; i < reset.length; i++) {\n      this.buffer[this.length++] = reset[i];\n    }\n    return this.length;\n  },\n  setBuffer(buffer) {\n    this.buffer = buffer;\n    this.length = this.buffer.length;\n  },\n};\n\n\n/**\n * An object containing WebGL specific properties to be used by the WebGL renderer\n *\n * @class\n * @private\n */\nexport default class WebGLGraphicsData {\n  /**\n   * @param {WebGLRenderingContext} gl - The current WebGL drawing context\n   * @param {PIXI.Shader} shader - The shader\n   * @param {object} attribsState - The state for the VAO\n   */\n  constructor(gl, shader, attribsState) {\n    /**\n     * The current WebGL drawing context\n     *\n     * @member {WebGLRenderingContext}\n     */\n    this.gl = gl;\n\n    this.vertices = new TypedArray(Float32Array);\n    this.indices = new TypedArray(Uint16Array);\n\n    /**\n     * The main buffer\n     * @member {WebGLBuffer}\n     */\n    this.buffer = glCore.GLBuffer.createVertexBuffer(gl);\n\n    /**\n     * The index buffer\n     * @member {WebGLBuffer}\n     */\n    this.indexBuffer = glCore.GLBuffer.createIndexBuffer(gl);\n\n    /**\n     * Whether this graphics is dirty or not\n     * @member {boolean}\n     */\n    this.dirty = true;\n\n    /**\n     *\n     * @member {PIXI.Shader}\n     */\n    this.shader = shader;\n\n    this.vao = new glCore.VertexArrayObject(gl, attribsState)\n        .addIndex(this.indexBuffer)\n        .addAttribute(this.buffer, shader.attributes.aVertexPosition, gl.FLOAT, false, 4 * 2, 0);\n  }\n\n  /**\n   * Resets the vertices and the indices\n   */\n  reset() {\n    this.vertices.reset();\n    this.indices.reset();\n  }\n\n  /**\n   * Binds the buffers and uploads the data\n   */\n  upload() {\n    // this.glPoints = new Float32Array(this.points);\n    this.buffer.upload(this.vertices.buffer);\n\n    // this.glIndices = new Uint16Array(this.indices);\n    this.indexBuffer.upload(this.indices.buffer);\n\n    this.dirty = false;\n  }\n\n  /**\n   * Empties all the data\n   */\n  destroy() {\n    this.vertices.destroy();\n    this.indices.destroy();\n\n    this.vao.destroy();\n    this.buffer.destroy();\n    this.indexBuffer.destroy();\n\n    this.gl = null;\n\n    this.buffer = null;\n    this.indexBuffer = null;\n  }\n}\n","const ARC_RESOLUTION = 1;\nconst BEZIER_CURVE_RESOLUTION = 10;\n\n/**\n * a\n * @private\n * @param {*} points a\n * @param {*} x a\n * @param {*} y a\n * @return {points}\n */\nfunction lineTo(points, x, y) {\n  points.push(x, y);\n  return points;\n}\n\n/**\n * a\n * @private\n * @param {*} a a\n * @param {*} b a\n * @return {length}\n */\nexport function getLength(a, b) {\n  return Math.sqrt(a * a + b * b);\n}\n\n/**\n * a\n * @private\n * @param {*} t a\n * @param {*} p a\n * @return {number}\n */\nfunction CubicBezierP0( t, p ) {\n  const k = 1 - t;\n  return k * k * k * p;\n}\n\n/**\n * a\n * @private\n * @param {*} t a\n * @param {*} p a\n * @return {number}\n */\nfunction CubicBezierP1( t, p ) {\n  const k = 1 - t;\n  return 3 * k * k * t * p;\n}\n\n/**\n * a\n * @private\n * @param {*} t a\n * @param {*} p a\n * @return {number}\n */\nfunction CubicBezierP2( t, p ) {\n  return 3 * ( 1 - t ) * t * t * p;\n}\n\n/**\n * a\n * @private\n * @param {*} t a\n * @param {*} p a\n * @return {number}\n */\nfunction CubicBezierP3( t, p ) {\n  return t * t * t * p;\n}\n\n/**\n * a\n * @private\n * @param {*} t a\n * @param {*} p0 a\n * @param {*} p1 a\n * @param {*} p2 a\n * @param {*} p3 a\n * @return {number}\n */\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n  return CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) + CubicBezierP3( t, p3 );\n}\n\n/**\n * a\n * @private\n * @param {*} x0 a\n * @param {*} y0 a\n * @param {*} x1 a\n * @param {*} y1 a\n * @param {*} x2 a\n * @param {*} y2 a\n * @param {*} x3 a\n * @param {*} y3 a\n * @return {number}\n */\nfunction estimateBezierCurveLength(x0, y0, x1, y1, x2, y2, x3, y3) {\n  const a = x3 - x2;\n  const b = y3 - y2;\n  const c = x2 - x1;\n  const d = y2 - y1;\n  const e = x1 - x0;\n  const f = y1 - y0;\n  return getLength(a, b) + getLength(c, d) + getLength(e, f);\n}\n\n/**\n * a\n * @private\n * @param {*} points a\n * @param {*} x1 a\n * @param {*} y1 a\n * @param {*} x2 a\n * @param {*} y2 a\n * @param {*} x3 a\n * @param {*} y3 a\n * @return {points}\n */\nfunction bezierCurveTo(points, x1, y1, x2, y2, x3, y3) {\n  if (!isFinite(x1) || !isFinite(y1) || !isFinite(x2) || !isFinite(y2) || !isFinite(x3) || !isFinite(y3)) return points;\n\n  const x0 = points[points.length-2];\n  const y0 = points[points.length-1];\n\n  const lengthEstimate = estimateBezierCurveLength(x0, y0, x1, y1, x2, y2, x3, y3);\n  const step = Math.min(BEZIER_CURVE_RESOLUTION / lengthEstimate, 0.5);\n\n  for (let t = step; t < 1; t += step) {\n    const x = CubicBezier(t, x0, x1, x2, x3);\n    const y = CubicBezier(t, y0, y1, y2, y3);\n    points.push(x, y);\n  }\n  points.push(x3, y3);\n  return points;\n}\n\n/**\n * a\n * @private\n * @param {*} cmds a\n * @param {*} points a\n * @return {points}\n */\nexport function PathToPoints(cmds, points) {\n  for (let i = 0; i < cmds.length; i++) {\n    const { cmd, args } = cmds[i];\n    switch (cmd) {\n      case 'M':\n      case 'L':\n        lineTo(points, args[0], args[1]);\n        break;\n      case 'C':\n        bezierCurveTo(points, args[0], args[1], args[2], args[3], args[4], args[5]);\n        break;\n      default:\n        break;\n    }\n  }\n  return points;\n}\n\n/**\n * a\n * @private\n * @param {*} vertices a\n * @param {*} x a\n * @param {*} y a\n * @param {*} radius a\n * @param {*} startAngle a\n * @param {*} endAngle a\n * @param {*} anticlockwise a\n */\nexport function addArc(vertices, x, y, radius, startAngle, endAngle, anticlockwise) {\n  // bring angles all in [0, 2*PI] range\n  startAngle = startAngle % (2 * Math.PI);\n  endAngle = endAngle % (2 * Math.PI);\n  if (startAngle < 0) startAngle += 2*Math.PI;\n  if (endAngle < 0) endAngle += 2*Math.PI;\n\n  if (startAngle>=endAngle) {\n    endAngle += 2 * Math.PI;\n  }\n\n  let diff = endAngle - startAngle;\n  let direction = 1;\n  if (anticlockwise) {\n    direction = -1;\n    diff = 2*Math.PI - diff;\n    if (diff == 0) diff = 2*Math.PI;\n  }\n\n  const length = diff * radius;\n  let nrOfInterpolationPoints = (Math.sqrt(length / ARC_RESOLUTION)) >> 0;\n  nrOfInterpolationPoints = nrOfInterpolationPoints % 2 === 0 ? nrOfInterpolationPoints + 1 : nrOfInterpolationPoints;\n  const dangle = diff / nrOfInterpolationPoints;\n\n  // console.log('ARC_RESOLUTION', ARC_RESOLUTION, length);\n  // console.log('nrOfInterpolationPoints', nrOfInterpolationPoints);\n  let angle = startAngle;\n  for (let j = 0; j < nrOfInterpolationPoints+1; j++) {\n    vertices.push(x, y, x + radius * Math.cos(angle), y + radius * Math.sin(angle));\n    angle += direction * dangle;\n  }\n  // console.log([].concat(vertices));\n}\n\n/**\n * a\n * @private\n * @param {*} contour a\n * @return {Number}\n */\nexport function area( contour ) {\n  const n = contour.length;\n  let a = 0.0;\n\n  for (let p = n - 1, q = 0; q < n; p = q ++ ) {\n    a += contour[p][0] * contour[q][1] - contour[q][0] * contour[p][1];\n  }\n\n  return a * 0.5;\n}\n\n/**\n * a\n * @private\n * @param {*} pts a\n * @return {Boolean}\n */\nexport function isClockWise( pts ) {\n  return area( pts ) > 0;\n}\n","import { PathToPoints, getLength, addArc } from './utils';\n/**\n * del dash with path line\n * @private\n * @param {*} points path line pints\n * @param {*} closed is closed or not\n * @param {*} lineDash dash array\n * @param {*} lineDashOffset dash offset\n * @return {object}\n */\nfunction prepareLineDash(points, closed, lineDash, lineDashOffset) {\n  if (closed) {\n    points.push(points[0], points[1]);\n  }\n\n  let currentOffset = lineDashOffset;\n  let dashIndex = 0;\n  let draw = 1;\n  while (currentOffset > lineDash[dashIndex]) {\n    currentOffset -= lineDash[dashIndex];\n    dashIndex++;\n    if (draw) draw = 0; else draw = 1;\n    if (dashIndex == lineDash.length) {\n      dashIndex = 0;\n    }\n  }\n\n  let newPoints = [points[0], points[1]];\n  let toDrawOrNotToDraw = [draw];\n  // var skipped_dash_switch = false;\n  for (let i = 2; i < points.length; i+=2) {\n    let line = [points[i]-points[i-2], points[i+1]-points[i-1]];\n    let lineLength = getLength(line[0], line[1]);\n    line[0] /= lineLength;\n    line[1] /= lineLength;\n    let progress = 0;\n    while (lineLength - progress + currentOffset >= lineDash[dashIndex]) {\n      progress += lineDash[dashIndex] - currentOffset;\n\n      currentOffset = 0;\n      if (draw) draw = 0; else draw = 1;\n      dashIndex++;\n      if (dashIndex == lineDash.length) {\n        dashIndex = 0;\n      }\n\n      toDrawOrNotToDraw.push(draw);\n      newPoints.push(points[i-2] + progress * line[0], points[i-1] + progress * line[1]);\n    }\n    if (lineLength - progress != 0) {\n      newPoints.push(points[i], points[i+1]);\n      toDrawOrNotToDraw.push(draw);\n    }\n    currentOffset += lineLength - progress;\n  }\n\n  // I've once wished this was available so I could continue a dash pattern with a different stroked points, so now it is\n  // this.currentLineDashOffset = currentOffset;\n  // for (var i = 0; i < dashIndex; i++) {\n  //   this.currentLineDashOffset += lineDash[dashIndex];\n  // }\n\n  if (closed) {\n    points.pop();\n    points.pop();\n    newPoints.pop();\n    newPoints.pop();\n    toDrawOrNotToDraw.pop();\n  }\n\n  return { newPoints, toDrawOrNotToDraw };\n}\n\n/**\n * a\n * @private\n * @param {*} path a\n * @param {*} style a\n * @param {*} vertices a\n * @return {array}\n */\nexport default function PathToStroke(path, style, vertices) {\n  // Polyline algorithm, take a piece of paper and draw it if you want to understand what is happening\n  // If stroking turns out to be slow, here will be your problem. This should and can easily\n  // be implemented in a geometry shader or something so it runs on the gpu. But webgl doesn't\n  // support geometry shaders for some reason.\n\n  const points = PathToPoints(path.cmds, []);\n  const closed = path.isClosed;\n  const useLinedash = style.lineDash.length >= 2;\n  const lineWidthDiv2 = style.lineWidth / 2;\n  // console.log(useLinedash, lineWidthDiv2);\n\n  // remove duplicate points, they mess up the math\n  let array = [points[0], points[1]];\n  for (let i = 2; i < points.length; i+=2) {\n    if (points[i] != array[array.length-2] || points[i+1] != array[array.length-1]) {\n      array.push(points[i], points[i+1]);\n    }\n  }\n\n  // implicitly close\n  if (closed && (array[array.length-2] != array[0] || array[array.length-1] != array[1])) {\n    array.push(array[0], array[1]);\n  }\n\n  let toDrawOrNotToDraw;\n  if (useLinedash) {\n    const result = prepareLineDash(array, closed, style.lineDash, style.lineDashOffset);\n    toDrawOrNotToDraw = result.toDrawOrNotToDraw;\n    array = result.newPoints;\n  }\n\n  const vertexOffset = vertices.length;\n  let vertexProgress = vertices.length;\n  const toDrawBuffer = [];\n\n  // process lineCap\n  if (!closed) {\n    const line = [array[2] - array[0], array[3] - array[1]];\n\n    const l = getLength(line[0], line[1]);\n    line[0] /= l;\n    line[1] /= l;\n    const normal = [-line[1], line[0]];\n\n    const a = [array[0] + lineWidthDiv2 * normal[0], array[1] + lineWidthDiv2 * normal[1]];\n    const b = [array[0] - lineWidthDiv2 * normal[0], array[1] - lineWidthDiv2 * normal[1]];\n\n    if (style.lineCap == 'butt') {\n      vertices.push(a[0], a[1], b[0], b[1]);\n    } else if (style.lineCap == 'square') {\n      vertices.push(a[0] - lineWidthDiv2 * line[0], a[1] - lineWidthDiv2 * line[1], b[0] - lineWidthDiv2 * line[0], b[1] - lineWidthDiv2 * line[1]);\n    } else { // round\n      vertices.push(array[0], array[1], a[0], a[1]);\n      const startAngle = Math.atan2(a[1] - array[1], a[0] - array[0]);\n      const endAngle = Math.atan2(b[1] - array[1], b[0] - array[0]);\n      addArc(vertices, array[0], array[1], lineWidthDiv2, startAngle, endAngle);\n      vertices.push(array[0], array[1], b[0], b[1]);\n      vertices.push(a[0], a[1], b[0], b[1]);\n    }\n\n    if (useLinedash) {\n      const toDraw = toDrawOrNotToDraw[0];\n      for (let j = vertexProgress; j < vertices.length; j+=2) {\n        toDrawBuffer.push(toDraw);\n      }\n      vertexProgress = vertices.length;\n    }\n  } else {\n    array.push(array[2], array[3]);\n  }\n\n\n  // process lineJoin\n  for (let i = 2; i < array.length-2; i+=2) {\n    const line = [array[i] - array[i-2], array[i+1] - array[i-1]];\n\n    const normal = [-line[1], line[0]];\n    let l = getLength(normal[0], normal[1]);\n    normal[0] /= l;\n    normal[1] /= l;\n\n    let p2minp1 = [array[i+2] - array[i], array[i+3] - array[i+1]];\n    l = getLength(p2minp1[0], p2minp1[1]);\n    p2minp1[0] /= l;\n    p2minp1[1] /= l;\n\n    let p1minp0 = [array[i] - array[i-2], array[i+1] - array[i-1]];\n    l = getLength(p1minp0[0], p1minp0[1]);\n    p1minp0[0] /= l;\n    p1minp0[1] /= l;\n\n    let tangent = [p1minp0[0] + p2minp1[0], p1minp0[1] + p2minp1[1]];\n    l = getLength(tangent[0], tangent[1]);\n\n    let length = 0;\n    let dot;\n    let miter;\n    if (l > 0) {\n      tangent[0] /= l;\n      tangent[1] /= l;\n      miter = [-tangent[1], tangent[0]];\n      dot = (miter[0]*normal[0] + miter[1]*normal[1]);\n      length = lineWidthDiv2 / dot;\n    } else {\n      length = 0;\n      miter = [-tangent[1], tangent[0]];\n    }\n\n    const a = [array[i] + length * miter[0], array[i+1] + length * miter[1]];\n    const b = [array[i] - length * miter[0], array[i+1] - length * miter[1]];\n\n    if (style.lineJoin == 'miter' && (1/dot) <= style.miterLimit) {\n      // miter\n      vertices.push(a[0], a[1], b[0], b[1]);\n    } else {\n      const sinAngle = p1minp0[1] * p2minp1[0] - p1minp0[0] * p2minp1[1];\n\n      if (style.lineJoin == 'round') { // round\n        if (sinAngle < 0) {\n          const n1 = [array[i] + p1minp0[1] * lineWidthDiv2, array[i+1] - p1minp0[0] * lineWidthDiv2];\n          const n2 = [array[i] + p2minp1[1] * lineWidthDiv2, array[i+1] - p2minp1[0] * lineWidthDiv2];\n          vertices.push(a[0], a[1], n1[0], n1[1]);\n          const startAngle = Math.atan2(n1[1] - array[i+1], n1[0] - array[i]);\n          const endAngle = Math.atan2(n2[1] - array[i+1], n2[0] - array[i]);\n          addArc(vertices, array[i], array[i+1], lineWidthDiv2, startAngle, endAngle);\n          vertices.push(a[0], a[1], n2[0], n2[1]);\n        } else {\n          const n1 = [array[i] - p1minp0[1] * lineWidthDiv2, array[i+1] + p1minp0[0] * lineWidthDiv2];\n          const n2 = [array[i] - p2minp1[1] * lineWidthDiv2, array[i+1] + p2minp1[0] * lineWidthDiv2];\n          vertices.push(n1[0], n1[1], b[0], b[1]);\n          const startAngle = Math.atan2(n2[1] - array[i+1], n2[0] - array[i]);\n          const endAngle = Math.atan2(n1[1] - array[i+1], n1[0] - array[i]);\n          addArc(vertices, array[i], array[i+1], lineWidthDiv2, startAngle, endAngle);\n          vertices.push(n2[0], n2[1], b[0], b[1]);\n        }\n      } else { // bevel\n        if (sinAngle < 0) {\n          const n1 = [array[i] + p1minp0[1] * lineWidthDiv2, array[i+1] - p1minp0[0] * lineWidthDiv2];\n          const n2 = [array[i] + p2minp1[1] * lineWidthDiv2, array[i+1] - p2minp1[0] * lineWidthDiv2];\n          vertices.push(a[0], a[1], n1[0], n1[1], a[0], a[1], n2[0], n2[1]);\n        } else {\n          const n1 = [array[i] - p1minp0[1] * lineWidthDiv2, array[i+1] + p1minp0[0] * lineWidthDiv2];\n          const n2 = [array[i] - p2minp1[1] * lineWidthDiv2, array[i+1] + p2minp1[0] * lineWidthDiv2];\n          vertices.push(n1[0], n1[1], b[0], b[1], n2[0], n2[1], b[0], b[1]);\n        }\n      }\n    }\n\n    if (useLinedash) {\n      const toDraw = toDrawOrNotToDraw[i/2];\n      for (let j = vertexProgress; j < vertices.length; j+=2) {\n        toDrawBuffer.push(toDraw);\n      }\n      vertexProgress = vertices.length;\n    }\n  }\n\n  if (!closed) {\n    const line = [array[array.length-2] - array[array.length-4], array[array.length-1] - array[array.length-3]];\n\n    const l = Math.sqrt(Math.pow(line[0], 2) + Math.pow(line[1], 2));\n    line[0] /= l;\n    line[1] /= l;\n    const normal = [-line[1], line[0]];\n\n    const a = [array[array.length-2] + lineWidthDiv2 * normal[0], array[array.length-1] + lineWidthDiv2 * normal[1]];\n    const b = [array[array.length-2] - lineWidthDiv2 * normal[0], array[array.length-1] - lineWidthDiv2 * normal[1]];\n\n    if (style.lineCap == 'butt') {\n      vertices.push(a[0], a[1], b[0], b[1]);\n    } else if (style.lineCap == 'square') {\n      vertices.push(a[0] + lineWidthDiv2 * line[0], a[1] + lineWidthDiv2 * line[1],\n          b[0] + lineWidthDiv2 * line[0], b[1] + lineWidthDiv2 * line[1]);\n    } else { // round\n      vertices.push(a[0], a[1], b[0], b[1]);\n      vertices.push(array[array.length-2], array[array.length-1], b[0], b[1]);\n      const startAngle = Math.atan2(b[1] - array[array.length-1], b[0] - array[array.length-2]);\n      const endAngle = Math.atan2(a[1] - array[array.length-1], a[0] - array[array.length-2]);\n      addArc(vertices, array[array.length-2], array[array.length-1], lineWidthDiv2, startAngle, endAngle);\n      vertices.push(array[array.length-2], array[array.length-1], a[0], a[1]);\n    }\n  } else {\n    vertices.push(vertices.buffer[vertexOffset], vertices.buffer[vertexOffset+1], vertices.buffer[vertexOffset+2], vertices.buffer[vertexOffset+3]);\n  }\n\n  if (useLinedash) {\n    const toDraw = toDrawOrNotToDraw[toDrawOrNotToDraw.length-1];\n    for (let j = vertexProgress; j < vertices.length; j+=2) {\n      toDrawBuffer.push(toDraw);\n    }\n    vertexProgress = vertices.length;\n  }\n\n  return toDrawBuffer;\n}\n","import { PathToPoints } from './utils';\n\n/**\n * build shape from path\n * @private\n * @param {*} path path line\n * @param {*} vertices vertices\n * @param {*} holes holes\n * @return {Boolean} shape empty or not\n */\nexport default function PathToShape(path, vertices) {\n  const closed = path.isClosed;\n  let empty = true;\n\n  const points = PathToPoints(path.cmds, []);\n\n  // remove duplicate points, they mess up the math\n  let array = [points[0], points[1]];\n  for (let i = 2; i < points.length; i+=2) {\n    if (points[i] != array[array.length-2] || points[i+1] != array[array.length-1]) {\n      array.push(points[i], points[i+1]);\n    }\n  }\n\n  // implicitly close\n  if (closed && (array[array.length-2] != array[0] || array[array.length-1] != array[1])) {\n    array.push(array[0], array[1]);\n  }\n\n  if (array.length >= 6) {\n    for (let i = 0; i < array.length; i++) {\n      vertices.push(array[i]);\n    }\n    empty = false;\n  }\n  return empty;\n}\n","// import { hex2rgb } from '../../utils';\n// import { SHAPES } from '../../const';\n// import ObjectRenderer from '../../renderers/webgl/utils/ObjectRenderer';\n// import WebGLRenderer from '../../renderers/webgl/WebGLRenderer';\n\n// import buildPoly from './utils/buildPoly';\n// import buildRectangle from './utils/buildRectangle';\n// import buildRoundedRectangle from './utils/buildRoundedRectangle';\n// import buildCircle from './utils/buildCircle';\nimport {\n  WebGLRenderer,\n  ObjectRenderer,\n  utils,\n} from 'pixi.js';\nimport PrimitiveShader from './shaders/PrimitiveShader';\nimport WebGLGraphicsData from './WebGLGraphicsData';\nimport PathToStroke from './PathToStroke';\nimport PathToShape from './PathToShape';\n\n/**\n * Renders the graphics object.\n *\n * @class\n * @private\n * @extends PIXI.ObjectRenderer\n */\nexport default class LottieGraphicsRenderer extends ObjectRenderer {\n  /**\n   * @param {PIXI.WebGLRenderer} renderer - The renderer this object renderer works for.\n   */\n  constructor(renderer) {\n    super(renderer);\n\n    this.graphicsDataPool = [];\n\n    this.primitiveShader = null;\n\n    this.webGLData = null;\n\n    this.gl = renderer.gl;\n\n    // easy access!\n    this.CONTEXT_UID = 0;\n  }\n\n  /**\n     * Called when there is a WebGL context change\n     *\n     * @private\n     *\n     */\n  onContextChange() {\n    this.gl = this.renderer.gl;\n    this.CONTEXT_UID = this.renderer.CONTEXT_UID;\n    this.primitiveShader = new PrimitiveShader(this.gl);\n  }\n\n  /**\n     * Destroys this renderer.\n     *\n     */\n  destroy() {\n    ObjectRenderer.prototype.destroy.call(this);\n\n    for (let i = 0; i < this.graphicsDataPool.length; ++i) {\n      this.graphicsDataPool[i].destroy();\n    }\n\n    this.graphicsDataPool = null;\n  }\n\n  /**\n     * Renders a graphics object.\n     *\n     * @param {PIXI.Graphics} graphics - The graphics object to render.\n     */\n  render(graphics) {\n    const renderer = this.renderer;\n    const gl = renderer.gl;\n\n    const webGLData = this.getWebGLData(graphics);\n\n    if (graphics.isDirty) this.updateGraphics(graphics, webGLData);\n\n    if (webGLData.indices.length === 0) return;\n\n    // This  could be speeded up for sure!\n    const shader = this.primitiveShader;\n\n    renderer.bindShader(shader);\n    renderer.state.setBlendMode(graphics.blendMode);\n\n    shader.uniforms.translationMatrix = graphics.transform.worldTransform.toArray(true);\n    shader.uniforms.color = utils.hex2rgb(graphics.color);\n    shader.uniforms.alpha = graphics.worldAlpha;\n\n\n    // TODO: 需要增加是否开启开关\n    // if (graphics.drawType === 'stroke') {\n    //   this.renderer.state.setDepthTest(true);\n    // }\n\n    renderer.bindVao(webGLData.vao);\n\n    webGLData.vao.draw(gl.TRIANGLES, webGLData.indices.length);\n\n    // if (graphics.drawType === 'stroke') {\n    //   this.renderer.state.setDepthTest(false);\n    // }\n  }\n\n  /**\n   * Updates the graphics object\n   *\n   * @private\n   * @param {PIXI.Graphics} graphics - The graphics object to update\n   * @param {PIXI.Graphics} webGLData - The graphics object to update\n   */\n  updateGraphics(graphics, webGLData) {\n    webGLData.reset();\n    if (graphics.drawType === 'stroke') {\n      this.buildStroke(graphics, webGLData);\n    } else {\n      this.buildFill(graphics, webGLData);\n    }\n    // console.log('groups', this.vertices.buffer, this.indices.buffer);\n    graphics.isDirty = false;\n  }\n\n  /**\n   * a\n   * @param {*} graphics a\n   * @param {PIXI.Graphics} webGLData - The graphics object to update\n   */\n  buildStroke(graphics, webGLData) {\n    const { vertices, indices } = webGLData;\n\n    const { paths, lineStyle } = graphics;\n    const useLinedash = lineStyle.lineDash.length >= 2;\n\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n\n      const vertexOffset = vertices.length / 2;\n      const toDrawBuffer = PathToStroke(path, lineStyle, vertices);\n      if (useLinedash) {\n        for (let i = vertexOffset+2; i < vertices.length/2; i+=2) {\n          if (toDrawBuffer[i-vertexOffset-1]) {\n            indices.push(i-2, i, i-1, i, i+1, i-1);\n          }\n        }\n      } else {\n        for (let i = vertexOffset+2; i < vertices.length/2; i+=2) {\n          indices.push(i-2, i, i-1, i, i+1, i-1);\n        }\n      }\n    }\n    webGLData.upload();\n  }\n\n  /**\n   * a\n   * @param {*} graphics a\n   * @param {PIXI.Graphics} webGLData - The graphics object to update\n   */\n  buildFill(graphics, webGLData) {\n    const { vertices, indices } = webGLData;\n    const { paths } = graphics;\n\n    let meshVertices = [];\n    const meshIndices = [];\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n\n      const fillVertices = [];\n      const isEmpty = PathToShape(path, fillVertices);\n\n      if (isEmpty) break;\n\n      const holes = path.holes;\n      const holeIndices = [];\n      for (let j = 0; j < holes.length; j++) {\n        const pathHole = holes[j];\n        const cacheLength = fillVertices.length;\n        const isEmpty = PathToShape(pathHole, fillVertices);\n        if (isEmpty) break;\n        holeIndices.push(cacheLength / 2);\n      }\n      const triangles = utils.earcut(fillVertices, holeIndices, 2);\n\n      const vertexOffset = meshVertices.length / 2;\n      for (let j = 0; j < fillVertices.length; j+=2) {\n        meshVertices.push(fillVertices[j], fillVertices[j + 1]);\n      }\n      for (let j = 0; j < triangles.length; j+=3) {\n        meshIndices.push(vertexOffset + triangles[j], vertexOffset + triangles[j + 1], vertexOffset + triangles[j + 2]);\n      }\n    }\n\n    if (meshVertices.length < 6 || meshIndices < 3) return;\n\n    vertices.setBuffer(new Float32Array(meshVertices));\n    indices.setBuffer(new Uint16Array(meshIndices));\n    webGLData.upload();\n  }\n\n  /**\n   *\n   * @private\n   * @param {PIXI.Graphics} graphics - The graphics object to render.\n   * @return {WebGLGraphicsData} webGLData\n   */\n  getWebGLData(graphics) {\n    if (!graphics.webGLData || this.CONTEXT_UID !== graphics.webGLData.CONTEXT_UID) {\n      graphics.webGLData = new WebGLGraphicsData(this.renderer.gl, this.primitiveShader, this.renderer.state.attribState);\n      graphics.webGLData.CONTEXT_UID = this.CONTEXT_UID;\n    }\n    return graphics.webGLData;\n  }\n}\n\nWebGLRenderer.registerPlugin('lottiegraphics', LottieGraphicsRenderer);\n","import {\n  CanvasRenderer,\n} from 'pixi.js';\n\n/**\n * Renders the graphics object.\n *\n * @class\n * @private\n * @extends PIXI.ObjectRenderer\n */\nexport default class CanvasLottieGraphicsRenderer {\n  /**\n   * @param {PIXI.CanvasRenderer} renderer - The current PIXI renderer.\n   */\n  constructor(renderer) {\n    this.renderer = renderer;\n  }\n\n  /**\n     * Destroys this renderer.\n     *\n     */\n  destroy() {\n    this.renderer = null;\n  }\n\n  /**\n     * Renders a graphics object.\n     *\n     * @param {PIXI.Graphics} graphics - The graphics object to render.\n     */\n  render(graphics) {\n    const renderer = this.renderer;\n    const context = renderer.context;\n    const lineStyle = graphics.lineStyle;\n    const worldAlpha = graphics.worldAlpha;\n    const transform = graphics.transform.worldTransform;\n    const resolution = renderer.resolution;\n\n    context.setTransform(\n        transform.a * resolution,\n        transform.b * resolution,\n        transform.c * resolution,\n        transform.d * resolution,\n        transform.tx * resolution,\n        transform.ty * resolution\n    );\n\n    renderer.setBlendMode(graphics.blendMode);\n\n    context.globalAlpha = worldAlpha;\n    if (graphics.drawType === 'stroke') {\n      context.lineWidth = lineStyle.lineWidth;\n      context.lineJoin = lineStyle.lineJoin;\n      context.miterLimit = lineStyle.miterLimit;\n      context.lineCap = lineStyle.lineCap;\n      context.lineDashOffset = lineStyle.lineDashOffset;\n      context.setLineDash(lineStyle.lineDash || []);\n      this.buildStroke(graphics);\n    } else {\n      this.buildFill(graphics);\n    }\n  }\n\n  /**\n   * a\n   * @param {*} graphics a\n   */\n  buildStroke(graphics) {\n    const renderer = this.renderer;\n    const context = renderer.context;\n    const color = `#${(`00000${(graphics.color | 0).toString(16)}`).substr(-6)}`;\n    const { paths, lineStyle } = graphics;\n\n    context.lineWidth = lineStyle.lineWidth;\n    context.lineJoin = lineStyle.lineJoin;\n    context.miterLimit = lineStyle.miterLimit;\n    context.lineCap = lineStyle.lineCap;\n    context.lineDashOffset = lineStyle.lineDashOffset;\n    context.setLineDash(lineStyle.lineDash || []);\n\n    context.beginPath();\n    for (let i = 0; i < paths.length; i++) {\n      this.drawPath(context, paths[i]);\n    }\n\n    context.strokeStyle = color;\n    context.stroke();\n  }\n\n  /**\n   * a\n   * @param {*} graphics a\n   */\n  buildFill(graphics) {\n    const renderer = this.renderer;\n    const context = renderer.context;\n    const color = `#${(`00000${(graphics.color | 0).toString(16)}`).substr(-6)}`;\n    const { paths } = graphics;\n\n    context.beginPath();\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n\n      this.drawPath(context, path);\n\n      for (let j = 0; j < path.holes.length; j++) {\n        this.drawPath(context, path.holes[j]);\n      }\n    }\n    context.fillStyle = color;\n    context.fill();\n  }\n\n  /**\n   * a\n   * @param {*} context a\n   * @param {*} path a\n   */\n  drawPath(context, path) {\n    for (let i = 0; i < path.cmds.length; i++) {\n      const { cmd, args } = path.cmds[i];\n      switch (cmd) {\n        case 'M':\n          context.moveTo(args[0], args[1]);\n          break;\n        case 'L':\n          context.lineTo(args[0], args[1]);\n          break;\n        case 'C':\n          context.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}\n\nCanvasRenderer.registerPlugin('lottiegraphics', CanvasLottieGraphicsRenderer);\n","\n/**\n * a\n * @private\n */\nexport default class PathCMD {\n  /**\n   * a\n   */\n  constructor() {\n    this.cmds = [];\n    this.holes = [];\n    this.isClosed = false;\n    this.isClockWise = false;\n  }\n\n  /**\n   * a\n   * @return {number}\n   */\n  getLength() {\n    return this.cmds.length;\n  }\n\n  /**\n   * a\n   * @param {*} cmd a\n   * @param {*} args a\n   */\n  add(cmd, args) {\n    this.cmds.push({ cmd, args });\n  }\n\n  /**\n   * Moves the current drawing position to x, y.\n   *\n   * @param {number} x - the X coordinate to move to\n   * @param {number} y - the Y coordinate to move to\n   */\n  moveTo(x = 0, y = 0) {\n    this.add('M', [x, y]);\n  }\n\n  /**\n   * Moves the current drawing position to x, y.\n   *\n   * @param {number} x - the X coordinate to move to\n   * @param {number} y - the Y coordinate to move to\n   */\n  lineTo(x, y) {\n    this.add('L', [x, y]);\n  }\n\n  /**\n   * Calculate the points for a bezier curve and then draws it.\n   *\n   * @param {number} cpX - Control point x\n   * @param {number} cpY - Control point y\n   * @param {number} cpX2 - Second Control point x\n   * @param {number} cpY2 - Second Control point y\n   * @param {number} toX - Destination point x\n   * @param {number} toY - Destination point y\n   */\n  bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\n    this.add('C', [cpX, cpY, cpX2, cpY2, toX, toY]);\n  }\n\n  /**\n   * a\n   */\n  closePath() {\n    this.isClosed = true;\n  }\n}\n","import {\n  Container,\n  BLEND_MODES,\n  // Graphics,\n  // Sprite,\n  // Rectangle,\n  // Matrix,\n} from 'pixi.js';\nimport './webgl/LottieGraphicsRenderer';\nimport './canvas/CanvasLottieGraphicsRenderer';\nimport PathCMD from './PathCMD';\nimport { isClockWise } from './webgl/utils';\n\n/**\n * LottieGraphics class\n * @class\n * @private\n * @extends Container\n */\nexport default class LottieGraphics extends Container {\n  /**\n   * LottieGraphics class\n   */\n  constructor() {\n    super();\n    this.paths = [];\n    this._samplerPoints = [];\n    this.currentPath = null;\n    this.color = 0x000000;\n    this.lineStyle = {\n      lineWidth: 1,\n      lineJoin: 'miter',\n      miterLimit: 10.0,\n      lineCap: 'butt',\n      lineDash: [], // [5, 5],\n      lineDashOffset: 0,\n    };\n    this.isDirty = true;\n\n    this.drawType = '';\n\n    /**\n     * The blend mode to be applied to the graphic shape. Apply a value of\n     * `BLEND_MODES.NORMAL` to reset the blend mode.\n     *\n     * @member {number}\n     * @default BLEND_MODES.NORMAL\n     */\n    this.blendMode = BLEND_MODES.NORMAL;\n\n    /**\n     * store webgl data object\n     */\n    this.webGLData = null;\n\n    /**\n     * mark first shape is clock wise or not\n     */\n    this.firstIsClockWise = true;\n\n    /**\n     * mark pre shape is clock wise or not\n     */\n    this.preClockWiseStatus = null;\n  }\n\n  /**\n   * clear all paths\n   */\n  clear() {\n    this.paths.length = 0;\n    this.currentPath = null;\n\n    this.firstIsClockWise = true;\n    this.preClockWiseStatus = null;\n\n    this.isDirty = true;\n  }\n\n  /**\n   * Moves the current drawing position to x, y.\n   *\n   * @param {number} x - the X coordinate to move to\n   * @param {number} y - the Y coordinate to move to\n   */\n  moveTo(x = 0, y = 0) {\n    this.endPath();\n    this.currentPath = new PathCMD();\n    this.currentPath.moveTo(x, y);\n\n    this._samplerPoints.push([x, y]);\n  }\n\n  /**\n   * Moves the current drawing position to x, y.\n   *\n   * @param {number} x - the X coordinate to move to\n   * @param {number} y - the Y coordinate to move to\n   */\n  lineTo(x, y) {\n    this.currentPath.lineTo(x, y);\n\n    this._samplerPoints.push([x, y]);\n  }\n\n  /**\n   * Calculate the points for a bezier curve and then draws it.\n   *\n   * @param {number} cpX - Control point x\n   * @param {number} cpY - Control point y\n   * @param {number} cpX2 - Second Control point x\n   * @param {number} cpY2 - Second Control point y\n   * @param {number} toX - Destination point x\n   * @param {number} toY - Destination point y\n   */\n  bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\n    this.currentPath.bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY);\n\n    this._samplerPoints.push([toX, toY]);\n  }\n\n  /**\n   * end a path\n   */\n  endPath() {\n    if (this.currentPath && this.currentPath.getLength() > 1) {\n      const length = this.paths.length;\n      const newPathIsClockWise = isClockWise(this._samplerPoints);\n      this.currentPath.isClockWise = newPathIsClockWise;\n\n      if (length === 0) this.firstIsClockWise = newPathIsClockWise;\n\n      const needHole = length > 0 && this.preClockWiseStatus === this.firstIsClockWise && this.preClockWiseStatus !== newPathIsClockWise;\n\n      if (needHole) {\n        const prePath = length > 0 ? this.paths[length - 1] : null;\n        prePath.holes.push(this.currentPath);\n      } else {\n        this.paths.push(this.currentPath);\n        this.preClockWiseStatus = newPathIsClockWise;\n      }\n\n      this.currentPath = null;\n      this.isDirty = true;\n    }\n    this._samplerPoints.length = 0;\n  }\n\n  /**\n   * close a path\n   */\n  closePath() {\n    this.currentPath.closePath();\n  }\n\n  /**\n   * stroke paths\n   */\n  stroke() {\n    this.endPath();\n    this.drawType = 'stroke';\n  }\n\n  /**\n   * fill paths\n   */\n  fill() {\n    if (this.currentPath === null) return;\n    this.closePath();\n    this.endPath();\n    this.drawType = 'fill';\n  }\n\n  /**\n   * Renders the object using the WebGL renderer\n   *\n   * @private\n   * @param {PIXI.WebGLRenderer} renderer - The renderer\n   */\n  _renderWebGL(renderer) {\n    renderer.setObjectRenderer(renderer.plugins.lottiegraphics);\n    renderer.plugins.lottiegraphics.render(this);\n  }\n\n  /**\n   * Renders the object using the WebGL renderer\n   *\n   * @private\n   * @param {PIXI.WebGLRenderer} renderer - The renderer\n   */\n  _renderCanvas(renderer) {\n    renderer.plugins.lottiegraphics.render(this);\n  }\n}\n","import {\n  Matrix,\n} from 'pixi.js';\nimport { Tools } from '@ali/lottie-core';\nimport LottieGraphics from '../graphics/LottieGraphics';\n\n/**\n * PathLottie class\n * @class\n * @private\n */\nexport default class PathLottie extends LottieGraphics {\n  /**\n   * PathLottie constructor\n   * @param {object} lottieElement lottie element object\n   * @param {object} config layer data information\n   */\n  constructor(lottieElement, config) {\n    super();\n    this.lottieElement = lottieElement;\n    this.config = config;\n    this.passMatrix = new Matrix();\n  }\n\n  /**\n   * a\n   */\n  setShapeTransform() {\n    const trProps = this.lottieElement.preTransforms.finalTransform.props;\n    this.passMatrix.set(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13]);\n    this.transform.setFromMatrix(this.passMatrix);\n  }\n\n  /**\n   * Updates the object transform for rendering\n   */\n  updateTransform() {\n    this.setShapeTransform();\n    this.transform.updateTransform(this.parent.transform);\n    // multiply the alphas..\n    this.worldAlpha = this.alpha * this.parent.worldAlpha;\n\n    this._bounds.updateID++;\n  }\n\n  /**\n   * a\n   * @param {*} style a\n   */\n  updateLottieGrahpics(style) {\n    // Skipping style when\n    // Stroke width equals 0\n    // style should not be rendered (extra unused repeaters)\n    // current opacity equals 0\n    // global opacity equals 0\n    const type = style.type;\n    this.clear();\n    if (((type === 'st' || type === 'gs') && style.wi === 0) || !style.data._shouldRender || style.coOp === 0) {\n      return;\n    }\n\n    // ctx.save();\n    const shapes = style.elements;\n    const jLen = shapes.length;\n    for (let j = 0; j < jLen; j += 1) {\n      const nodes = shapes[j].trNodes;\n      const kLen = nodes.length;\n\n      for (let k = 0; k < kLen; k++) {\n        if (nodes[k].t == 'm') {\n          this.moveTo(nodes[k].p[0], nodes[k].p[1]);\n        } else if (nodes[k].t == 'c') {\n          this.bezierCurveTo(nodes[k].pts[0], nodes[k].pts[1], nodes[k].pts[2], nodes[k].pts[3], nodes[k].pts[4], nodes[k].pts[5]);\n        } else {\n          this.closePath();\n        }\n      }\n    }\n\n    if (type === 'st' || type === 'gs') {\n      if (style.da) {\n        this.lineStyle.lineDash = style.da;\n        this.lineStyle.lineDashOffset = style.do;\n      } else {\n        this.lineStyle.lineDash = [];\n      }\n    }\n\n    if (type === 'st' || type === 'gs') {\n      this.lineStyle.lineWidth = style.wi;\n      this.lineStyle.lineCap = style.lc;\n      this.lineStyle.lineJoin = style.lj;\n      this.lineStyle.miterLimit = style.ml || 0;\n      this.color = Tools.rgb2hex(style.co || style.grd);\n      this.alpha = style.coOp;\n      this.stroke();\n    } else {\n      this.color = Tools.rgb2hex(style.co || style.grd);\n      this.alpha = style.coOp;\n      this.fill();\n    }\n  }\n}\n","import {\n  // Container,\n  Graphics,\n  // Sprite,\n  // Rectangle,\n  // Matrix,\n} from 'pixi.js';\n\nimport LottieGraphicsMask from '../helpers/LottieGraphicsMask';\n\n/**\n * SolidElement class\n * @class\n * @private\n */\nexport default class SolidElement extends Graphics {\n  /**\n   * SolidElement constructor\n   * @param {object} lottieElement lottie element object\n   * @param {object} config layer data information\n   */\n  constructor(lottieElement, config) {\n    super();\n    this.lottieElement = lottieElement;\n    this.config = config;\n\n    const hex = parseInt(config.color.replace('#', ''), 16);\n    this.beginFill(hex);\n    this.drawRect(0, 0, config.rect.width, config.rect.height);\n    this.endFill();\n  }\n\n  /**\n   * call it when this layer had finish lottie parse\n   */\n  onSetupLottie() {\n    if (this.lottieElement.hasValidMasks()) {\n      const preCompBox = this.config.session.local;\n      this.graphicsMasks = new LottieGraphicsMask(preCompBox);\n      this.mask = this.graphicsMasks;\n      this.addChild(this.mask);\n    }\n  }\n\n  /**\n   * a\n   * @param {*} parent a\n   */\n  setHierarchy(parent) {\n    this.hierarchy = parent;\n  }\n\n  /**\n   * a\n   */\n  show() {\n    this.visible = true;\n  }\n\n  /**\n   * a\n   */\n  hide() {\n    this.visible = false;\n  }\n\n  /**\n   * a\n   * @param {*} transform\n   */\n  updateLottieTransform(transform) {\n    this.x = transform.x;\n    this.y = transform.y;\n    this.pivot.x = transform.anchorX;\n    this.pivot.y = transform.anchorY;\n    this.scale.x = transform.scaleX;\n    this.scale.y = transform.scaleY;\n    this.rotation = transform.rotation;\n    this.alpha = transform.alpha;\n  }\n\n  /**\n   * a\n   * @param {*} masks a\n   */\n  updateLottieMasks(masks) {\n    if (!this.graphicsMasks) return;\n    this.graphicsMasks.updateMasks(masks);\n  }\n}\n","import {\n  // Container,\n  // Graphics,\n  Sprite,\n  Rectangle,\n  // Matrix,\n} from 'pixi.js';\n\nimport LottieGraphicsMask from '../helpers/LottieGraphicsMask';\n\n/**\n * SpriteElement class\n * @class\n * @private\n */\nexport default class SpriteElement extends Sprite {\n  /**\n   * SpriteElement constructor\n   * @param {object} lottieElement lottie element object\n   * @param {object} config layer data information\n   */\n  constructor(lottieElement, config) {\n    const { texture, asset } = config;\n    super(texture);\n\n    if (texture.baseTexture.hasLoaded) {\n      texture.orig = new Rectangle(0, 0, asset.w, asset.h);\n      texture._updateUvs();\n    } else {\n      texture.baseTexture.on('loaded', () => {\n        texture.orig = new Rectangle(0, 0, asset.w, asset.h);\n        texture._updateUvs();\n      });\n    }\n\n    this.lottieElement = lottieElement;\n    this.config = config;\n  }\n\n  /**\n   * call it when this layer had finish lottie parse\n   */\n  onSetupLottie() {\n    if (this.lottieElement.hasValidMasks()) {\n      const preCompBox = this.config.session.local;\n      this.graphicsMasks = new LottieGraphicsMask(preCompBox);\n      this.mask = this.graphicsMasks;\n      this.addChild(this.mask);\n    }\n  }\n\n  /**\n   * a\n   * @param {*} parent a\n   */\n  setHierarchy(parent) {\n    this.hierarchy = parent;\n  }\n\n  /**\n   * a\n   */\n  show() {\n    this.visible = true;\n  }\n\n  /**\n   * a\n   */\n  hide() {\n    this.visible = false;\n  }\n\n  /**\n   * a\n   * @param {*} transform\n   */\n  updateLottieTransform(transform) {\n    this.x = transform.x;\n    this.y = transform.y;\n    this.pivot.x = transform.anchorX;\n    this.pivot.y = transform.anchorY;\n    this.scale.x = transform.scaleX;\n    this.scale.y = transform.scaleY;\n    this.rotation = transform.rotation;\n    this.alpha = transform.alpha;\n  }\n\n  /**\n   * a\n   * @param {*} masks a\n   */\n  updateLottieMasks(masks) {\n    if (!this.graphicsMasks) return;\n    this.graphicsMasks.updateMasks(masks);\n  }\n}\n","import {\n  DisplayRegister,\n} from '@ali/lottie-core';\nimport { Container } from 'pixi.js';\n\nimport CompElement from './core/CompElement';\n// import PathPrimitive from './core/PathPrimitive';\nimport PathLottie from './core/PathLottie';\nimport SolidElement from './core/SolidElement';\nimport SpriteElement from './core/SpriteElement';\n\nDisplayRegister.registerDisplayByType(DisplayRegister.Type.Null, CompElement);\n// DisplayRegister.registerDisplayByType(DisplayRegister.Type.Path, PathPrimitive);\nDisplayRegister.registerDisplayByType(DisplayRegister.Type.Path, PathLottie);\nDisplayRegister.registerDisplayByType(DisplayRegister.Type.Shape, CompElement);\nDisplayRegister.registerDisplayByType(DisplayRegister.Type.Solid, SolidElement);\nDisplayRegister.registerDisplayByType(DisplayRegister.Type.Sprite, SpriteElement);\nDisplayRegister.registerDisplayByType(DisplayRegister.Type.Component, CompElement);\nDisplayRegister.registerDisplayByType(DisplayRegister.Type.Container, Container);\n","import { Eventer } from '@ali/lottie-core';\nimport {\n  Texture,\n} from 'pixi.js';\n\nconst regHttp = /^(https?:)?\\/\\//;\n\n/**\n * prefix\n * @private\n * @param {object} asset asset\n * @param {string} prefix prefix\n * @return {string}\n */\nfunction createUrl(asset, prefix) {\n  if (asset.e === 1) return asset.p;\n  if (prefix) prefix = prefix.replace(/\\/?$/, '/');\n  const up = asset.u + asset.p;\n  let url = '';\n  if (asset.up) {\n    url = asset.up;\n  } else {\n    url = regHttp.test(up) ? up : prefix + up;\n  }\n  return url;\n}\n\n/**\n * an texture loader\n * @private\n */\nclass LoadTexture extends Eventer {\n  /**\n   * an texture loader\n   * @param {array} assets assets\n   * @param {object} options options\n   * @param {string} [options.prefix] prefix\n   * @param {boolean} [options.autoLoad=true] autoLoad\n   */\n  constructor(assets, { prefix, autoLoad = true }) {\n    super();\n    this.assets = assets;\n    this.prefix = prefix || '';\n    this.textures = {};\n    this._total = 0;\n    this._failed = 0;\n    this._received = 0;\n    this.loaded = false;\n    if (autoLoad) this.load();\n  }\n\n  /**\n   * load assets\n   */\n  load() {\n    this.assets.forEach((asset) => {\n      const id = asset.id;\n      const url = createUrl(asset, this.prefix);\n      const texture = Texture.fromImage(url, '*');\n      this.textures[id] = texture;\n      this._total++;\n      if (texture.baseTexture.hasLoaded) {\n        this._received++;\n        this.emit('update');\n        if (this._received + this._failed >= this._total) this._onComplete();\n      } else {\n        texture.baseTexture.once('loaded', () => {\n          this._received++;\n          this.emit('update');\n          if (this._received + this._failed >= this._total) this._onComplete();\n        });\n        texture.baseTexture.once('error', () => {\n          this._failed++;\n          this.emit('update');\n          if (this._received + this._failed >= this._total) this._onComplete();\n        });\n      }\n    });\n  }\n\n  /**\n   * complete handle\n   */\n  _onComplete() {\n    this.loaded = true;\n    this.emit('complete');\n    if (this._failed > 0) {\n      if (this._failed >= this._total) {\n        this.emit('fail');\n      } else {\n        this.emit('partlyfail', this._failed);\n      }\n    }\n  }\n\n  /**\n   * get texture by id\n   * @param {string} id id\n   * @return {Texture} texture\n   */\n  getTextureById(id) {\n    return this.textures[id];\n  }\n}\n\n/**\n * format response\n * @private\n * @param {*} xhr xhr object\n * @return {object}\n */\nfunction formatResponse(xhr) {\n  if (xhr.response && typeof xhr.response === 'object') {\n    return xhr.response;\n  } else if (xhr.response && typeof xhr.response === 'string') {\n    return JSON.parse(xhr.response);\n  } else if (xhr.responseText) {\n    return JSON.parse(xhr.responseText);\n  }\n}\n\n/**\n * load a json data\n * @private\n * @param {String} path json url path\n * @param {Function} callback success callback\n * @param {Function} errorCallback error callback\n */\nfunction loadAjax(path, callback, errorCallback) {\n  let response;\n  let xhr = new XMLHttpRequest();\n  xhr.open('GET', path, true);\n  // set responseType after calling open or IE will break.\n  try {\n    // This crashes on Android WebView prior to KitKat\n    xhr.responseType = 'json';\n  } catch (err) {\n    console.error('lottie-pixi loadAjax:', err);\n  }\n  xhr.send();\n  xhr.onreadystatechange = function() {\n    if (xhr.readyState == 4) {\n      if (xhr.status == 200) {\n        response = formatResponse(xhr);\n        callback(response);\n      } else {\n        try {\n          response = formatResponse(xhr);\n          callback(response);\n        } catch (err) {\n          if (errorCallback) {\n            errorCallback(err);\n          }\n        }\n      }\n    }\n  };\n}\n\n/**\n * load json\n * @private\n */\nclass LoadJson extends Eventer {\n  /**\n   * load json\n   * @param {String} path json url\n   */\n  constructor(path) {\n    super();\n    this.path = path;\n    this.onSuccess = this.onSuccess.bind(this);\n    this.onFail = this.onFail.bind(this);\n    loadAjax(path, this.onSuccess, this.onFail);\n  }\n\n  /**\n   * on success handle\n   * @param {Object} response response json\n   */\n  onSuccess(response) {\n    this.emit('success', response);\n    this.emit('complete', response);\n  }\n\n  /**\n   * on fail handle\n   * @param {Object} error error\n   */\n  onFail(error) {\n    this.emit('fail', error);\n    this.emit('error', error);\n  }\n}\n\n/**\n * an texture loader\n * @private\n * @param {Array} assets assets images\n * @param {Object} options loader options\n * @param {String} [options.prefix] path prefix\n * @param {Boolean} [options.autoLoad=true] auto load\n * @return {LoadTexture}\n */\nexport function loadTexture(assets, options = {}) {\n  return new LoadTexture(assets, options);\n}\n\n/**\n * an json loader\n * @private\n * @param {String} path json path\n * @return {LoadJson}\n */\nexport function loadJson(path) {\n  return new LoadJson(path);\n}\n","import {\n  LoaderRegister,\n} from '@ali/lottie-core';\n\nimport {\n  loadTexture,\n  loadJson,\n} from './Loader';\n\nLoaderRegister.registerLoaderByType(LoaderRegister.Type.Texture, loadTexture);\nLoaderRegister.registerLoaderByType(LoaderRegister.Type.Ajax, loadJson);\n","import { BezierEasing } from '@ali/lottie-core';\n/* eslint no-cond-assign: \"off\" */\n/* eslint new-cap: 0 */\n/* eslint max-len: 0 */\n\n\n/**\n * timing-function set\n *\n * ```js\n * // demo-A\n * dispayA.animate({\n *   from: {x: 100},\n *   to: {x: 200},\n *   ease: Tween.Ease.In, // use which timing-function ?\n * })\n *\n * // demo-B\n * dispayB.animate({\n *   from: {x: 100},\n *   to: {x: 200},\n *   ease: Tween.Ease.Bezier(0.4, 0.34, 0.6, 0.78), // use which timing-function ?\n * })\n * ```\n * @namespace Tween\n */\n\nexport const Tween = {\n\n  /**\n   * Tween.Linear timing-function set\n   *\n   * @alias Linear\n   * @memberof Tween\n   * @enum {function}\n   */\n  Linear: {\n\n    /**\n     * Tween.Linear.None\n     * @param {number} k 0 - 1 time progress\n     * @return {number}\n     */\n    None(k) {\n      return k;\n    },\n\n  },\n\n  /**\n   * Tween.Ease timing-function set\n   *\n   * 其中 `Ease.Bezier` 比较特殊，是个工厂函数，传入控制点可以构造你想要的贝塞尔曲线。{@link https://jasonchen1982.github.io/jcc2d/examples/demo_animation_bezier/index.html}\n   * ```javascript\n   * const ease = Tween.Ease.Bezier(0.4, 0.34, 0.6, 0.78);\n   * ```\n   * @alias Ease\n   * @memberof Tween\n   * @enum {function}\n   */\n  Ease: {\n\n    /**\n     * Tween.Ease.In\n     * @param {number} k 0 - 1 time progress\n     * @return {number}\n     */\n    In: (function() {\n      const bezier = new BezierEasing(0.42, 0, 1, 1);\n      return function(k) {\n        return bezier.get(k);\n      };\n    })(),\n\n    /**\n     * Tween.Ease.Out\n     * @param {number} k 0 - 1 time progress\n     * @return {number}\n     */\n    Out: (function() {\n      const bezier = new BezierEasing(0, 0, 0.58, 1);\n      return function(k) {\n        return bezier.get(k);\n      };\n    })(),\n\n    /**\n     * Tween.Ease.InOut\n     * @param {number} k 0 - 1 time progress\n     * @return {number}\n     */\n    InOut: (function() {\n      const bezier = new BezierEasing(0.42, 0, 0.58, 1);\n      return function(k) {\n        return bezier.get(k);\n      };\n    })(),\n\n    /**\n     * Tween.Ease.Bezier\n     * @param {*} x1 control point-in x component\n     * @param {*} y1 control point-in y component\n     * @param {*} x2 control point-out x component\n     * @param {*} y2 control point-out y component\n     * @return {bezier} return bezier function and cacl number\n     */\n    Bezier(x1, y1, x2, y2) {\n      const bezier = new BezierEasing(x1, y1, x2, y2);\n      return function(k) {\n        return bezier.get(k);\n      };\n    },\n\n  },\n\n  /**\n   * Tween.Elastic timing-function set\n   *\n   * @alias Elastic\n   * @memberof Tween\n   * @enum {function}\n   */\n  Elastic: {\n\n    /**\n     * Tween.Elastic.In\n     * @param {number} k 0 - 1 time progress\n     * @return {number}\n     */\n    In(k) {\n      if (k === 0) {\n        return 0;\n      }\n      if (k === 1) {\n        return 1;\n      }\n      return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n    },\n\n    /**\n     * Tween.Elastic.Out\n     * @param {number} k 0 - 1 time progress\n     * @return {number}\n     */\n    Out(k) {\n      if (k === 0) {\n        return 0;\n      }\n      if (k === 1) {\n        return 1;\n      }\n      return Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n    },\n\n    /**\n     * Tween.Elastic.InOut\n     * @param {number} k 0 - 1 time progress\n     * @return {number}\n     */\n    InOut(k) {\n      if (k === 0) {\n        return 0;\n      }\n      if (k === 1) {\n        return 1;\n      }\n      k *= 2;\n      if (k < 1) {\n        return -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n      }\n      return 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n    },\n\n  },\n\n  /**\n   * Tween.Back timing-function set\n   *\n   * @alias Back\n   * @memberof Tween\n   * @enum {function}\n   */\n  Back: {\n\n    /**\n     * Tween.Back.In\n     * @param {number} k 0 - 1 time progress\n     * @return {number}\n     */\n    In(k) {\n      const s = 1.70158;\n      return k * k * ((s + 1) * k - s);\n    },\n\n    /**\n     * Tween.Back.Out\n     * @param {number} k 0 - 1 time progress\n     * @return {number}\n     */\n    Out(k) {\n      const s = 1.70158;\n      return --k * k * ((s + 1) * k + s) + 1;\n    },\n\n    /**\n     * Tween.Back.InOut\n     * @param {number} k 0 - 1 time progress\n     * @return {number}\n     */\n    InOut(k) {\n      const s = 1.70158 * 1.525;\n      if ((k *= 2) < 1) {\n        return 0.5 * (k * k * ((s + 1) * k - s));\n      }\n      return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n    },\n\n  },\n\n  /**\n   * Tween.Bounce timing-function set\n   *\n   * @alias Bounce\n   * @memberof Tween\n   * @enum {function}\n   */\n  Bounce: {\n\n    /**\n     * Tween.Bounce.In\n     * @param {number} k 0 - 1 time progress\n     * @return {number}\n     */\n    In(k) {\n      return 1 - Tween.Bounce.Out(1 - k);\n    },\n\n    /**\n     * Tween.Bounce.Out\n     * @param {number} k 0 - 1 time progress\n     * @return {number}\n     */\n    Out(k) {\n      if (k < (1 / 2.75)) {\n        return 7.5625 * k * k;\n      } else if (k < (2 / 2.75)) {\n        return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n      } else if (k < (2.5 / 2.75)) {\n        return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n      }\n      return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n    },\n\n    /**\n     * Tween.Bounce.InOut\n     * @param {number} k 0 - 1 time progress\n     * @return {number}\n     */\n    InOut(k) {\n      if (k < 0.5) {\n        return Tween.Bounce.In(k * 2) * 0.5;\n      }\n      return Tween.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n    },\n  },\n};\n","import { Eventer, Tools } from '@ali/lottie-core';\n\n/**\n * 动画对象的基本类型\n *\n * @class\n * @private\n * @extends Eventer\n * @param {object} [options] 动画配置信息\n */\nfunction Animator(options) {\n  Eventer.call(this);\n\n  /**\n   * 渲染对象\n   * @member {PIXI.Display}\n   */\n  this.element = options.element || {};\n\n  /**\n   * 动画时长\n   * @member {number}\n   */\n  this.duration = options.duration || 300;\n\n  /**\n   * 动画是否有效\n   * @member {boolean}\n   */\n  this.living = true;\n\n  /**\n   * 动画是否需要常驻/永生\n   * @member {boolean}\n   */\n  this.resident = options.resident || false;\n\n  /**\n   * 动画是否无限循环播放\n   * @member {boolean}\n   */\n  this.infinite = options.infinite || false;\n\n  /**\n   * 动画是否交替播放\n   * @member {boolean}\n   */\n  this.alternate = options.alternate || false;\n\n  /**\n   * 动画重复播放次数\n   * @member {number}\n   */\n  this.repeats = options.repeats || 0;\n\n  /**\n   * 动画开始前延迟时间\n   * @member {number}\n   */\n  this.delay = options.delay || 0;\n\n  /**\n   * 动画开始前等待时间，只影响首轮播放\n   * @member {number}\n   */\n  this.wait = options.wait || 0;\n\n  /**\n   * 动画播放时间缩放因子\n   * @member {number}\n   */\n  this.timeScale = Tools.isNumber(options.timeScale) ?\n    options.timeScale :\n    1;\n\n  if (options.onComplete) {\n    this.on('complete', options.onComplete.bind(this));\n  }\n  if (options.onUpdate) {\n    this.on('update', options.onUpdate.bind(this));\n  }\n\n  this.init();\n\n  /**\n   * 动画是否暂停\n   * @member {number}\n   */\n  this.paused = false;\n}\n\nAnimator.prototype = Object.create(Eventer.prototype);\n\n/**\n * 更新动画\n * @param {number} snippet 时间片段\n * @return {object} pose\n */\nAnimator.prototype.update = function(snippet) {\n  const snippetCache = this.direction * this.timeScale * snippet;\n  if (this.waitCut > 0) {\n    this.waitCut -= Math.abs(snippetCache);\n    return;\n  }\n  if (this.paused || !this.living || this.delayCut > 0) {\n    if (this.delayCut > 0) this.delayCut -= Math.abs(snippetCache);\n    return;\n  }\n\n  this.progress += snippetCache;\n  let isEnd = false;\n  const progressCache = this.progress;\n\n  if (this.spill()) {\n    if (this.repeatsCut > 0 || this.infinite) {\n      if (this.repeatsCut > 0) --this.repeatsCut;\n      this.delayCut = this.delay;\n      if (this.alternate) {\n        this.direction *= -1;\n        this.progress = Tools.codomainBounce(this.progress, 0, this.duration);\n      } else {\n        this.direction = 1;\n        this.progress = Tools.euclideanModulo(this.progress, this.duration);\n      }\n    } else {\n      isEnd = true;\n    }\n  }\n\n  let pose;\n  if (!isEnd) {\n    pose = this.nextPose();\n    this.emit('update', pose, this.progress / this.duration);\n  } else {\n    if (!this.resident) this.living = false;\n    this.progress = Tools.clamp(progressCache, 0, this.duration);\n    pose = this.nextPose();\n    this.emit('complete', pose, progressCache - this.progress);\n  }\n  return pose;\n};\n\n/**\n * 检查动画是否到了边缘\n * @private\n * @return {boolean}\n */\nAnimator.prototype.spill = function() {\n  const bottomSpill = this.progress <= 0 && this.direction === -1;\n  const topSpill = this.progress >= this.duration && this.direction === 1;\n  return bottomSpill || topSpill;\n};\n\n/**\n * 初始化动画状态\n * @private\n */\nAnimator.prototype.init = function() {\n  this.direction = 1;\n  this.progress = 0;\n  this.repeatsCut = this.repeats;\n  this.delayCut = this.delay;\n  this.waitCut = this.wait;\n};\n\n/**\n * 下一帧的数据\n * @private\n */\nAnimator.prototype.nextPose = function() {\n  console.warn('should be overwrite');\n};\n\n/**\n * 线性插值\n * @private\n * @param {number} p0 起始位置\n * @param {number} p1 结束位置\n * @param {number} t  进度位置\n * @return {number} value\n */\nAnimator.prototype.linear = function(p0, p1, t) {\n  return (p1 - p0) * t + p0;\n};\n\n/**\n * 设置动画的速率\n * @param {number} speed 设置播放速度，时间缩放因子\n * @return {this}\n */\nAnimator.prototype.setSpeed = function(speed) {\n  this.timeScale = speed;\n  return this;\n};\n\n/**\n * 暂停动画\n * @return {this}\n */\nAnimator.prototype.pause = function() {\n  this.paused = true;\n  return this;\n};\n\n/**\n * 恢复动画\n * @return {this}\n */\nAnimator.prototype.resume = function() {\n  this.paused = false;\n  return this;\n};\n\nAnimator.prototype.restart = Animator.prototype.resume;\n\n/**\n * 停止动画，并把状态置为最后一帧，会触发事件\n * @return {this}\n */\nAnimator.prototype.stop = function() {\n  this.repeats = 0;\n  this.infinite = false;\n  this.progress = this.duration;\n  return this;\n};\n\n/**\n * 取消动画，不会触发事件\n * @return {this}\n */\nAnimator.prototype.cancel = function() {\n  this.living = false;\n  return this;\n};\n\nexport default Animator;\n","import { Tools } from '@ali/lottie-core';\nimport { Tween } from './Tween';\nimport Animator from './Animator';\n\n/**\n * Transition类型动画对象\n *\n * @class\n * @extends Animator\n * @param {object} options 动画配置参数\n * @param {object} [options.from] 设置对象的起始位置和起始姿态等，该项配置可选\n * @param {object} options.to 设置对象的结束位置和结束姿态等\n * @param {string} [options.ease] 执行动画使用的缓动函数 默认值为 Tween.Ease.InOut\n * @param {number} [options.repeats] 设置动画执行完成后再重复多少次，优先级没有infinite高\n * @param {boolean} [options.infinite] 设置动画无限循环，优先级高于repeats\n * @param {boolean} [options.alternate] 设置动画是否偶数次回返\n * @param {number} [options.duration] 设置动画执行时间 默认 300ms\n * @param {number} [options.wait] 设置动画延迟时间，在重复动画不会生效 默认 0ms\n * @param {number} [options.delay] 设置动画延迟时间，在重复动画也会生效 默认 0ms\n */\nfunction Transition(options) {\n  Animator.call(this, options);\n\n  // collect from pose, when from was not complete\n  options.from = options.from || {};\n  for (const i in options.to) {\n    if (Tools.isUndefined(options.from[i])) {\n      options.from[i] = this.element[i];\n    }\n  }\n\n  /**\n   * 动画缓动函数\n   * @member {boolean}\n   */\n  this.ease = options.ease || Tween.Ease.InOut;\n\n  /**\n   * 动画起始状态\n   * @member {boolean}\n   */\n  this.from = options.from;\n\n  /**\n   * 动画结束状态\n   * @member {boolean}\n   */\n  this.to = options.to;\n}\nTransition.prototype = Object.create(Animator.prototype);\n\n/**\n * 计算下一帧状态\n * @private\n * @return {object}\n */\nTransition.prototype.nextPose = function() {\n  const pose = {};\n  const t = this.ease(this.progress / this.duration);\n  for (const i in this.to) {\n    if (this.element[i] === undefined) continue;\n    this.element[i] = pose[i] = this.linear(this.from[i], this.to[i], t);\n  }\n  return pose;\n};\n\nexport default Transition;\n","import { Tools, TransformFrames } from '@ali/lottie-core';\nimport Animator from './Animator';\n\n/**\n * Bodymovin 类型动画对象\n *\n * @class\n * @extends Animator\n * @param {object} options 动画配置参数\n * @param {object} options.keyframes lottie 动画数据\n * @param {number} [options.frameRate] lottie 动画帧率，对应 json 里面的 fr\n * @param {array} [options.ignoreProps] 忽略 keyframes 动画数据中的哪些属性的动画描述 position|x|y|pivot|pivotX|pivotY|scale|scaleX|scaleY|rotation|alpha\n * @param {number} [options.repeats] 设置动画执行完成后再重复多少次，优先级没有infinite高\n * @param {boolean} [options.infinite] 设置动画无限循环，优先级高于repeats\n * @param {boolean} [options.alternate] 设置动画是否偶数次回返\n * @param {number} [options.duration] 设置动画执行时间 默认 300ms\n * @param {number} [options.wait] 设置动画延迟时间，在重复动画不会生效 默认 0ms\n * @param {number} [options.delay] 设置动画延迟时间，在重复动画也会生效 默认 0ms\n */\nfunction Bodymovin(options) {\n  Animator.call(this, options);\n\n  /**\n   * list of animated properties\n   * @private\n   * @member {array}\n   */\n  this.dynamicProperties = [];\n\n  // If layer has been modified in current tick this will be true\n  this._mdf = false;\n\n  /**\n   * 动画帧数据\n   * @member {object}\n   */\n  this.keyframes = Tools.copyJSON(options.keyframes);\n\n  /**\n   * 动画帧率，可以从 data.json 字段中的 fr 字段拿\n   * @member {number}\n   * @default 30\n   */\n  this.frameRate = options.frameRate || 30;\n\n  /**\n   * 动画帧素\n   * @private\n   * @member {number}\n   */\n  this.tpf = 1000 / this.frameRate;\n  // this.frameNum = -1;\n\n  /**\n   * 动画起始帧\n   * @private\n   * @member {number}\n   */\n  this.ip = Tools.isUndefined(options.ip) ? this.keyframes.ip : options.ip;\n\n  /**\n   * 动画结束帧\n   * @private\n   * @member {number}\n   */\n  this.op = Tools.isUndefined(options.ip) ? this.keyframes.op : options.op;\n\n  /**\n   * 动画总帧数\n   * @private\n   * @member {number}\n   */\n  this.tfs = this.op - this.ip;\n\n  /**\n   * 动画总时长\n   * @member {number}\n   */\n  this.duration = this.tfs * this.tpf;\n\n  /**\n   * 动画需要忽略哪些属性\n   * @member {array}\n   */\n  this.ignoreProps = Tools.isArray(options.ignoreProps) ? options.ignoreProps : [];\n\n  /**\n   * 动画transform解析对象\n   * @private\n   * @member {TransformFrames}\n   */\n  this.transform = new TransformFrames(this, this.keyframes.ks);\n}\nBodymovin.prototype = Object.create(Animator.prototype);\n\n/**\n * Calculates all dynamic values\n * @private\n * @param {number} frameNum current frame number in Layer's time\n */\nBodymovin.prototype.prepareProperties = function(frameNum) {\n  const len = this.dynamicProperties.length;\n  let i;\n  for (i = 0; i < len; i += 1) {\n    this.dynamicProperties[i].getValue(frameNum);\n    if (this.dynamicProperties[i]._mdf) {\n      this._mdf = true;\n    }\n  }\n};\n\n/**\n * add dynamic property\n * @private\n * @param {*} prop dynamic property\n */\nBodymovin.prototype.addDynamicProperty = function(prop) {\n  if (this.dynamicProperties.indexOf(prop) === -1) {\n    this.dynamicProperties.push(prop);\n  }\n};\n\n/**\n * 计算下一帧状态\n * @private\n * @return {object} pose\n */\nBodymovin.prototype.nextPose = function() {\n  const pose = {};\n  const frameNum = this.ip + this.progress / this.tpf;\n  this.prepareProperties(frameNum);\n\n  if (this.ignoreProps.indexOf('position') === -1) {\n    if (this.ignoreProps.indexOf('x') === -1) {\n      pose.x = this.element.x = this.transform.x;\n    }\n    if (this.ignoreProps.indexOf('y') === -1) {\n      pose.y = this.element.y = this.transform.y;\n    }\n  }\n\n  if (this.ignoreProps.indexOf('pivot') === -1) {\n    pose.pivot = {};\n    if (this.ignoreProps.indexOf('pivotX') === -1) {\n      pose.pivot.x = this.element.pivot.x = this.transform.anchorX;\n    }\n    if (this.ignoreProps.indexOf('pivotY') === -1) {\n      pose.pivot.y = this.element.pivot.y = this.transform.anchorY;\n    }\n  }\n\n  if (this.ignoreProps.indexOf('scale') === -1) {\n    pose.scale = {};\n    if (this.ignoreProps.indexOf('scaleX') === -1) {\n      pose.scale.x = this.element.scale.x = this.transform.scaleX;\n    }\n    if (this.ignoreProps.indexOf('scaleY') === -1) {\n      pose.scale.y = this.element.scale.y = this.transform.scaleY;\n    }\n  }\n\n  if (this.ignoreProps.indexOf('rotation') === -1) {\n    pose.rotation = this.element.rotation = this.transform.rotation;\n  }\n\n  if (this.ignoreProps.indexOf('alpha') === -1) {\n    pose.alpha = this.element.alpha = this.transform.alpha;\n  }\n\n  return pose;\n};\n\nexport default Bodymovin;\n","import Animator from './Animator';\nimport Transition from './Transition';\nimport Bodymovin from './Bodymovin';\n\n/**\n * AnimateRunner类型动画类\n *\n * @class\n * @extends Animator\n * @param {object} runner 添加动画，可以是 animate 动画配置\n * @param {object} [options={}] 整个动画的循环等配置\n * @param {object} [options.repeats=0] 设置动画执行完成后再重复多少次，优先级没有infinite高\n * @param {object} [options.infinite=false] 设置动画无限循环，优先级高于repeats\n * @param {number} [options.wait] 设置动画延迟时间，在重复动画`不会`生效 默认 0ms\n * @param {number} [options.delay] 设置动画延迟时间，在重复动画`会`生效 默认 0ms\n */\nfunction Queues(runner, options) {\n  Animator.call(this, options);\n\n  /**\n   * 动画段对象数组\n   * @member {array}\n   */\n  this.runners = [];\n\n  /**\n   * 动画段数据数组\n   * @member {array}\n   */\n  this.queues = [];\n\n  /**\n   * 当前动画段标记\n   * @member {number}\n   */\n  this.cursor = 0;\n\n  /**\n   * 总动画段数\n   * @member {number}\n   */\n  this.total = 0;\n\n  /**\n   * 强制不能交替播放\n   * @private\n   * @member {boolean}\n   */\n  this.alternate = false;\n\n  if (runner) this.then(runner);\n}\nQueues.prototype = Object.create(Animator.prototype);\n\n/**\n * 更新下一个`runner`\n * @param {Object} runner 动画配置\n * @return {this}\n */\nQueues.prototype.then = function(runner) {\n  this.queues.push(runner);\n\n  this.total = this.queues.length;\n  return this;\n};\n\n/**\n * 更新下一个`runner`\n * @private\n * @param {Object} _ 当前进度\n * @param {Number} time 剩余的时间\n */\nQueues.prototype.nextOne = function(_, time) {\n  this.runners[this.cursor].init();\n  this.cursor++;\n  this._residueTime = Math.abs(time);\n};\n\n/**\n * 初始化当前`runner`\n * @private\n */\nQueues.prototype.initOne = function() {\n  const runner = this.queues[this.cursor];\n  runner.infinite = false;\n  runner.resident = true;\n  runner.element = this.element;\n\n  let animate = null;\n  if (runner.keyframes) {\n    animate = new Bodymovin(runner);\n  } else if (runner.to) {\n    animate = new Transition(runner);\n  }\n  if (animate !== null) {\n    animate.on('complete', this.nextOne.bind(this));\n    this.runners.push(animate);\n  }\n};\n\n/**\n * 下一帧的状态\n * @private\n * @param {number} snippetCache 时间片段\n * @return {object}\n */\nQueues.prototype.nextPose = function(snippetCache) {\n  if (!this.runners[this.cursor] && this.queues[this.cursor]) {\n    this.initOne();\n  }\n  if (this._residueTime > 0) {\n    snippetCache += this._residueTime;\n    this._residueTime = 0;\n  }\n  return this.runners[this.cursor].update(snippetCache);\n};\n\n/**\n * 更新动画数据\n * @private\n * @param {number} snippet 时间片段\n * @return {object}\n */\nQueues.prototype.update = function(snippet) {\n  if (this.wait > 0) {\n    this.wait -= Math.abs(snippet);\n    return;\n  }\n  if (this.paused || !this.living || this.delayCut > 0) {\n    if (this.delayCut > 0) this.delayCut -= Math.abs(snippet);\n    return;\n  }\n\n  const cc = this.cursor;\n\n  const pose = this.nextPose(this.timeScale * snippet);\n\n  this.emit('update', {\n    index: cc, pose,\n  }, this.progress / this.duration);\n\n  if (this.spill()) {\n    if (this.repeats > 0 || this.infinite) {\n      if (this.repeats > 0) --this.repeats;\n      this.delayCut = this.delay;\n      this.cursor = 0;\n    } else {\n      if (!this.resident) this.living = false;\n      this.emit('complete', pose);\n    }\n  }\n  return pose;\n};\n\n/**\n * 检查动画是否到了边缘\n * @private\n * @return {boolean}\n */\nQueues.prototype.spill = function() {\n  const topSpill = this.cursor >= this.total;\n  return topSpill;\n};\n\n\nexport default Queues;\n","import {\n  ticker,\n  settings,\n  UPDATE_PRIORITY,\n} from 'pixi.js';\n\nconst Ticker = {\n  settings,\n  UPDATE_PRIORITY,\n  animationTicker: ticker.shared,\n};\n\n/**\n * replace ticker\n * @private\n * @param {Ticker} _ticker ticker\n */\nexport function useTicker(_ticker) {\n  Ticker.animationTicker = _ticker;\n}\n\nexport default Ticker;\n","import Transition from './Transition';\nimport Queues from './Queues';\nimport Bodymovin from './Bodymovin';\nimport Ticker from './ticker';\n\n/**\n * Animation类型动画类，该类上的功能将以`add-on`的形势增加到`DisplayObject`上\n *\n * @class\n * @private\n * @param {DisplayObject} element display object\n */\nfunction Animations(element) {\n  this.element = element;\n\n  /**\n   * 自身当前动画队列\n   *\n   * @member {array}\n   */\n  this.animates = [];\n\n  /**\n   * 自身及后代动画的缩放比例\n   *\n   * @member {number}\n   */\n  this.timeScale = 1;\n\n  /**\n   * 是否暂停自身的动画\n   *\n   * @member {Boolean}\n   */\n  this.paused = false;\n\n  this.updateDeltaTime = this.updateDeltaTime.bind(this);\n\n  Ticker.animationTicker.add(this.updateDeltaTime, Ticker.UPDATE_PRIORITY.HIGH);\n}\n\n/**\n * 清理需要移除的动画\n * @param {Array} needClearIdx 需要清理的对象索引\n * @private\n */\nAnimations.prototype.clearAnimators = function(needClearIdx) {\n  if (this.paused) return;\n  const animates = this.animates;\n  for (let i = 0; i < needClearIdx.length; i++) {\n    const idx = needClearIdx[i];\n    if (!animates[idx].living && !animates[idx].resident) {\n      this.animates.splice(idx, 1);\n    }\n  }\n};\n\n/**\n * 更新动画数据\n * @private\n * @param {number} deltaTime 时间片段\n */\nAnimations.prototype.updateDeltaTime = function(deltaTime) {\n  if (this.animates.length <= 0) return;\n  const snippet = deltaTime / Ticker.settings.TARGET_FPMS;\n  this.update(snippet);\n};\n\n/**\n * 更新动画数据\n * @private\n * @param {number} snippet 时间片段\n */\nAnimations.prototype.update = function(snippet) {\n  if (this.paused) return;\n  if (this.animates.length <= 0) return;\n\n  snippet = this.timeScale * snippet;\n  const needClearIdx = [];\n  for (let i = 0; i < this.animates.length; i++) {\n    if (!this.animates[i].living && !this.animates[i].resident) {\n      needClearIdx.push(i);\n      continue;\n    }\n    this.animates[i].update(snippet);\n  }\n  if (needClearIdx.length > 0) this.clearAnimators(needClearIdx);\n};\n\n/**\n * animate动画，指定动画的启始位置和结束位置\n *\n * ```js\n * display.animate({\n *   from: {x: 100},\n *   to: {x: 200},\n *   ease: Tween.Bounce.Out, // 执行动画使用的缓动函数 默认值为 Tween.Ease.InOut\n *   repeats: 10, // 动画运动完后再重复10次\n *   infinite: true, // 无限循环动画\n *   alternate: true, // 偶数次的时候动画回放\n *   duration: 1000, // 动画时长 ms单位 默认 300ms\n *   onUpdate: function(state,rate){},\n *   onComplete: function(){ console.log('end'); } // 动画执行结束回调\n * });\n * ```\n *\n * @param {Object} options 动画配置参数\n * @param {Object} [options.from] 设置对象的起始位置和起始姿态等，该项配置可选\n * @param {Object} options.to 设置对象的结束位置和结束姿态等\n * @param {String} [options.ease] 执行动画使用的缓动函数 默认值为 Tween.Ease.InOut\n * @param {Number} [options.repeats] 设置动画执行完成后再重复多少次，优先级没有infinite高\n * @param {Boolean} [options.infinite] 设置动画无限循环，优先级高于repeats\n * @param {Boolean} [options.alternate] 设置动画是否偶数次回返\n * @param {Number} [options.duration] 设置动画执行时间 默认 300ms\n * @param {Number} [options.wait] 设置动画延迟时间，在重复动画不会生效 默认 0ms\n * @param {Number} [options.delay] 设置动画延迟时间，在重复动画也会生效 默认 0ms\n * @param {Function} [options.onUpdate] 设置动画更新时的回调函数\n * @param {Function} [options.onComplete] 设置动画结束时的回调函数，如果infinite为true该事件将不会触发\n * @param {Boolean} clear 是否清除该对象上之前所有的动画\n * @return {Transition} Transition 实例\n */\nAnimations.prototype.animate = function(options, clear) {\n  options.element = this.element;\n  return this._addMove(new Transition(options), clear);\n};\n\n/**\n * 以链式调用的方式触发一串动画 （不支持`alternate`）\n *\n * ```js\n * display.queues({ from: { x: 1 }, to: { x: 2 } })\n *   .then({ from: { x: 2 }, to: { x: 1 } })\n *   .then({ from: { scale: 1 }, to: { scale: 0 } })\n *   .on('complete', function() {\n *     console.log('end queues');\n *   });\n * ```\n *\n * @param {Object} [runner] 添加动画，可以是 animate 或者 motion 动画配置\n * @param {Object} [options={}] 整个动画的循环等配置\n * @param {Object} [options.repeats=0] 设置动画执行完成后再重复多少次，优先级没有infinite高\n * @param {Object} [options.infinite=false] 设置动画无限循环，优先级高于repeats\n * @param {Number} [options.wait] 设置动画延迟时间，在重复动画`不会`生效 默认 0ms\n * @param {Number} [options.delay] 设置动画延迟时间，在重复动画`会`生效 默认 0ms\n * @param {Boolean} [clear=false] 是否清除该对象上之前所有的动画\n * @return {Queues} Queues 实例\n */\nAnimations.prototype.queues = function(runner, options, clear) {\n  options.element = this.element;\n  return this._addMove(new Queues(runner, options), clear);\n};\n\n/**\n * 播放一个bodymovin动画\n *\n * ```js\n * import data from './animations/data.js';\n * display.bodymovin({\n *   keyframes: data.layers[3],\n *   frameRate: data.fr,\n *   ignoreProps: [ 'position', 'scaleX ],\n * }).on('complete', function() {\n *   console.log('end queues');\n * });\n * ```\n *\n * @param {Object} options 动画配置参数\n * @param {Object} options.keyframes lottie 动画数据\n * @param {Number} [options.frameRate] lottie 动画帧率，对应 json 里面的 fr\n * @param {Array} [options.ignoreProps] 忽略 keyframes 动画数据中的哪些属性的动画描述 position|x|y|pivot|pivotX|pivotY|scale|scaleX|scaleY|rotation|alpha\n * @param {Number} [options.repeats] 设置动画执行完成后再重复多少次，优先级没有infinite高\n * @param {Boolean} [options.infinite] 设置动画无限循环，优先级高于repeats\n * @param {Boolean} [options.alternate] 设置动画是否偶数次回返\n * @param {Number} [options.duration] 设置动画执行时间 默认 300ms\n * @param {Number} [options.wait] 设置动画延迟时间，在重复动画不会生效 默认 0ms\n * @param {Number} [options.delay] 设置动画延迟时间，在重复动画也会生效 默认 0ms\n * @param {Function} [options.onUpdate] 设置动画更新时的回调函数\n * @param {Function} [options.onComplete] 设置动画结束时的回调函数，如果infinite为true该事件将不会触发\n * @param {Boolean} clear 是否清除该对象上之前所有的动画\n * @return {Bodymovin} Bodymovin 实例\n */\nAnimations.prototype.bodymovin = function(options, clear) {\n  options.element = this.element;\n  return this._addMove(new Bodymovin(options), clear);\n};\n\n/**\n * 添加到动画队列\n * @private\n * @param {object} animate 创建出来的动画对象\n * @param {boolean} clear 是否清除之前的动画\n * @return {Bodymovin|Queues|Transition} 动画实例\n */\nAnimations.prototype._addMove = function(animate, clear) {\n  if (clear) this.clearAll();\n  this.animates.push(animate);\n  return animate;\n};\n\n/**\n * 暂停动画组\n */\nAnimations.prototype.pause = function() {\n  this.paused = true;\n};\n\n/**\n * 恢复动画组\n */\nAnimations.prototype.resume = function() {\n  this.paused = false;\n};\n\nAnimations.prototype.restart = Animations.prototype.resume;\n\n/**\n * 设置动画组的播放速率\n * @param {number} speed a\n */\nAnimations.prototype.setSpeed = function(speed) {\n  this.timeScale = speed;\n};\n\n/**\n * 清除动画队列\n * @private\n */\nAnimations.prototype.clearAll = function() {\n  this.animates.length = 0;\n};\n\nexport default Animations;\n","import {\n  DisplayObject,\n} from 'pixi.js';\nimport Animations from '../animation/Animations';\n\n/**\n * lottie-pixi 为 pixi 的所有渲染对象扩展了基础动画能力，我们可以直接在渲染对象上使用 Tween 动画，目前支持三类动画 `animate` 、 `queues` 和 `bodymovin`，具体代码如下：\n *\n * ```js\n * // play a from-to animate\n * dispayA.animate({\n *   from: {x: 100},\n *   to: {x: 200},\n * })\n *\n * // play a queues animate\n * display.queues({ from: { x: 1 }, to: { x: 2 } })\n *   .then({ from: { x: 2 }, to: { x: 1 } })\n *   .then({ from: { scale: 1 }, to: { scale: 0 } });\n *\n * // play a bodymovin animate, parsing transform-alpha animation\n * display.bodymovin({\n *   keyframes: data.layers[3], // lottie 动画某一个动画层的数据\n *   frameRate: data.fr,\n *   ignoreProps: [ 'position', 'scaleX ],\n * })\n * ```\n *\n * @namespace BasicAnimation\n */\n\n/**\n * 创建一个 animations 对象\n * @private\n */\nDisplayObject.prototype.setupAnimations = function() {\n  if (!this.animations) this.animations = new Animations(this);\n};\n\n/**\n * animate动画，指定动画的启始位置和结束位置\n *\n * ```js\n * display.animate({\n *   from: {x: 100},\n *   to: {x: 200},\n *   ease: Tween.Bounce.Out, // 执行动画使用的缓动函数 默认值为 Tween.Ease.InOut\n *   repeats: 10, // 动画运动完后再重复10次\n *   infinite: true, // 无限循环动画\n *   alternate: true, // 偶数次的时候动画回放\n *   duration: 1000, // 动画时长 ms单位 默认 300ms\n *   onUpdate(state,rate){},\n *   onComplete(){ console.log('end'); } // 动画执行结束回调\n * }, clear)\n * .on('update', function() {\n *   console.log('update');\n * })\n * .on('complete', function() {\n *   console.log('complete');\n * });\n * ```\n *\n * @alias animate\n * @memberof BasicAnimation\n * @param {object} options 动画配置参数\n * @param {object} [options.from] 设置对象的起始位置和起始姿态等，该项配置可选\n * @param {object} options.to 设置对象的结束位置和结束姿态等\n * @param {string} [options.ease] 执行动画使用的缓动函数 默认值为 Tween.Ease.InOut\n * @param {number} [options.repeats] 设置动画执行完成后再重复多少次，优先级没有infinite高\n * @param {boolean} [options.infinite] 设置动画无限循环，优先级高于repeats\n * @param {boolean} [options.alternate] 设置动画是否偶数次回返\n * @param {number} [options.duration] 设置动画执行时间 默认 300ms\n * @param {number} [options.wait] 设置动画延迟时间，在重复动画不会生效 默认 0ms\n * @param {number} [options.delay] 设置动画延迟时间，在重复动画也会生效 默认 0ms\n * @param {boolean} clear 是否清除该对象上之前所有的动画\n * @return {Transition} Transition 实例\n */\nDisplayObject.prototype.animate = function(options, clear) {\n  if (!this.animations) this.setupAnimations();\n  return this.animations.animate(options, clear);\n};\n\n/**\n * 以链式调用的方式触发一串动画 （不支持`alternate`）\n *\n * ```js\n * display.queues({ from: { x: 1 }, to: { x: 2 } }, options, clear)\n *   .then({ from: { x: 2 }, to: { x: 1 } })\n *   .then({ from: { scale: 1 }, to: { scale: 0 } })\n *   .on('complete', function() {\n *     console.log('end queues');\n *   });\n * ```\n *\n * @alias queues\n * @memberof BasicAnimation\n * @param {object} runner 添加动画，可以是 animate\n * @param {object} [options={}] 整个动画的循环等配置\n * @param {object} [options.repeats=0] 设置动画执行完成后再重复多少次，优先级没有infinite高\n * @param {object} [options.infinite=false] 设置动画无限循环，优先级高于repeats\n * @param {number} [options.wait] 设置动画延迟时间，在重复动画`不会`生效 默认 0ms\n * @param {number} [options.delay] 设置动画延迟时间，在重复动画`会`生效 默认 0ms\n * @param {boolean} [clear=false] 是否清除该对象上之前所有的动画\n * @return {Queues} Queues 实例\n */\nDisplayObject.prototype.queues = function(runner, options = {}, clear) {\n  if (!this.animations) this.setupAnimations();\n  return this.animations.queues(runner, options, clear);\n};\n\n/**\n * 播放一个bodymovin动画\n *\n * ```js\n * import data from './animations/data.js';\n * display.bodymovin({\n *   keyframes: data.layers[3],\n *   frameRate: data.fr,\n *   ignoreProps: [ 'position', 'scaleX ],\n * }, clear)\n * .on('update', function() {\n *   console.log('update');\n * })\n * .on('complete', function() {\n *   console.log('complete');\n * });\n * ```\n *\n * @alias bodymovin\n * @memberof BasicAnimation\n * @param {object} options 动画配置参数\n * @param {object} options.keyframes lottie 动画数据\n * @param {number} [options.frameRate] lottie 动画帧率，对应 json 里面的 fr\n * @param {array} [options.ignoreProps] 忽略 keyframes 动画数据中的哪些属性的动画描述 position|x|y|pivot|pivotX|pivotY|scale|scaleX|scaleY|rotation|alpha\n * @param {number} [options.repeats] 设置动画执行完成后再重复多少次，优先级没有infinite高\n * @param {boolean} [options.infinite] 设置动画无限循环，优先级高于repeats\n * @param {boolean} [options.alternate] 设置动画是否偶数次回返\n * @param {number} [options.duration] 设置动画执行时间 默认 300ms\n * @param {number} [options.wait] 设置动画延迟时间，在重复动画不会生效 默认 0ms\n * @param {number} [options.delay] 设置动画延迟时间，在重复动画也会生效 默认 0ms\n * @param {boolean} clear 是否清除该对象上之前所有的动画\n * @return {Bodymovin} Bodymovin 实例\n */\nDisplayObject.prototype.bodymovin = function(options, clear) {\n  if (!this.animations) this.setupAnimations();\n  return this.animations.bodymovin(options, clear);\n};\n\n/**\n * add some prototype short access symbol\n * @ignore\n */\nObject.defineProperties(DisplayObject.prototype, {\n  /**\n   * An alias to scale.x\n   * @member {number}\n   * @ignore\n   */\n  scaleXY: {\n    get() {\n      return this.scale.x;\n    },\n    set(value) {\n      this.scale.set(value);\n    },\n  },\n  /**\n   * An alias to scale.x\n   * @member {number}\n   * @ignore\n   */\n  scaleX: {\n    get() {\n      return this.scale.x;\n    },\n    set(value) {\n      this.scale.x = value;\n    },\n  },\n  /**\n   * An alias to scale.x\n   * @member {number}\n   * @ignore\n   */\n  scaleY: {\n    get() {\n      return this.scale.y;\n    },\n    set(value) {\n      this.scale.y = value;\n    },\n  },\n  /**\n   * An alias to pivot.x\n   * @member {number}\n   * @ignore\n   */\n  pivotX: {\n    get() {\n      return this.pivot.x;\n    },\n    set(value) {\n      this.pivot.x = value;\n    },\n  },\n  /**\n   * An alias to pivot.x\n   * @member {number}\n   * @ignore\n   */\n  pivotY: {\n    get() {\n      return this.pivot.y;\n    },\n    set(value) {\n      this.pivot.y = value;\n    },\n  },\n});\n","import {\n  Container,\n} from 'pixi.js';\n\n/**\n * override pixi updateTransform, because lottie has hierarchy\n * @private\n */\nContainer.prototype.updateTransform = function() {\n  this.emit('pretransform');\n  this._boundsID++;\n  if (this.hierarchy && this.hierarchy.transform) {\n    this.hierarchy.updateTransform();\n    this.transform.updateTransform(this.hierarchy.transform);\n  } else {\n    this.transform.updateTransform(this.parent.transform);\n  }\n  this.worldAlpha = this.alpha * this.parent.worldAlpha;\n\n  for (let i = 0, j = this.children.length; i < j; ++i) {\n    const child = this.children[i];\n\n    if (child.visible) {\n      child.updateTransform();\n    }\n  }\n  this.emit('posttransform');\n};\n\n/**\n * override pixi updateTransform, because lottie has hierarchy\n * @private\n */\nContainer.prototype.containerUpdateTransform = Container.prototype.updateTransform;\n","import { Application } from 'pixi.js';\nimport { AnimationManager, Tools, Eventer } from '@ali/lottie-core';\n\n/**\n * `lottie-pixi` 中使用 `lottie动画` 功能有两种方式:\n * - 你可以通过 `loadAnimation` 一键创建渲染引擎、动画管理器、lottie动画实例。\n * - 你也可以在你想要的时机单独创建它们。\n *\n * 一键创建\n * ```javascript\n * import { loadAnimation } from '@ali/lottie-pixi';\n *\n * const animation = loadAnimation({\n *   view: '#load-animation',\n *   path: 'http://image.uc.cn/s/uae/g/01/lottieperformance/webglcanvas/game-preview/data.json',\n * });\n * ```\n *\n * 自由创建\n * ```javascript\n * import { Application } from '@pixi/app'; // pixi v5 import\n * // import { Application } from 'pixi.js'; // pixi v4 import\n * import { AnimationManager } from '@ali/lottie-pixi';\n * import data from './animations/data.js';\n *\n * // create pixi Application in some where\n * const app = new Application({\n *   view: document.getElementById('demo-canvas'), // canvas dom\n *   width: window.innerWidth,\n *   height: window.innerHeight,\n *   transparent: true,\n *   antialias: true,\n * });\n *\n * // just need single instance, one app one animationManager.\n * const animationManager = new AnimationManager(app);\n *\n * // parse one or more anims\n * const anim = animationManager.parseAnimation({\n *   keyframes: data,\n *   // infinite: true,\n *   // ...\n * });\n *\n * // addChild anim.group\n * app.stage.addChild(anim.group);\n * ```\n * 如果你的项目本身已经有 `PIXI` 的内容，自由创建的方式会更适合你。\n * @namespace LottieAnimation\n */\n\n/**\n * animate application\n * @alias AnimateApplication\n * @memberof LottieAnimation\n * @extends Eventer\n */\nclass AnimateApplication extends Eventer {\n  /**\n   * require lottie animation setting, post from loadAnimation\n   * @param {object} options lottie animation setting\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * lottie 动画对象\n     * @member {AnimationGroup}\n     */\n    this.animate = null;\n\n    if (options.keyframes && options.useAESize && (options.width !== options.keyframes.w || options.height !== options.keyframes.h)) {\n      options.width = options.keyframes.w;\n      options.height = options.keyframes.h;\n    }\n    const { view, width, height, transparent, antialias, preserveDrawingBuffer, resolution, forceCanvas, backgroundColor, clearBeforeRender, roundPixels, forceFXAA, legacy, powerPreference, sharedTicker, sharedLoader } = options;\n\n    /**\n     * pixi application 对象，管理渲染事项\n     * @member {PIXI.Application}\n     */\n    this.app = new Application({ view, width, height, transparent, antialias, preserveDrawingBuffer, resolution, forceCanvas, backgroundColor, clearBeforeRender, roundPixels, forceFXAA, legacy, powerPreference, sharedTicker, sharedLoader });\n\n    /**\n     * 管理 lottie 动画的对象，负责管理所有 lottie 动画的更新、生命周期\n     * @member {PIXI.Application}\n     */\n    this.manager = new AnimationManager(this.app);\n\n    /**\n     * 动画是否完全加载完毕\n     * @member {boolean}\n     */\n    this.loaded = false;\n\n    this.parseData(options);\n  }\n\n  /**\n   * resize with ae size\n   * @private\n   */\n  resizeWithAESize() {\n    const { width, height } = this.app.renderer;\n    if (width !== this.animate.keyframes.w || height !== this.animate.keyframes.h) {\n      this.app.renderer.resize(this.animate.keyframes.w, this.animate.keyframes.h);\n    }\n  }\n\n  /**\n   * 解析动画数据\n   * @private\n   * @param {*} options a\n   */\n  parseData(options) {\n    this.animate = this.manager.parseAnimation(options);\n\n    if (this.animate.isDisplayLoaded) {\n      if (options.useAESize) this.resizeWithAESize();\n      this.app.stage.addChild(this.animate.group);\n    } else {\n      this.animate.once('DisplayReady', () => {\n        if (options.useAESize) this.resizeWithAESize();\n        this.app.stage.addChild(this.animate.group);\n        this.emit('DisplayReady', this);\n      });\n    }\n\n    if (this.animate.isImagesLoaded) {\n      this.loaded = true;\n    } else {\n      this.animate.once('success', () => {\n        this.loaded = true;\n        this.emit('success', this);\n      });\n\n      this.animate.once('error', (error) => {\n        this.emit('error', error);\n      });\n    }\n  }\n}\n\n/**\n * parser a bodymovin data, and post some config for this animation group\n * @alias loadAnimation\n * @memberof LottieAnimation\n * @param {object} options lottie animation setting\n * @param {HTMLCanvasElement} options.view pixi Application canvas\n * @param {number} options.width pixi Application canvas width, usually use data.w\n * @param {number} options.height pixi Application canvas width, usually use data.h\n * @param {boolean} [options.useAESize=true] - If the render view is transparent, default false\n * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation, enable this if you\n *  need to call toDataUrl on the webgl context\n * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer, retina would be 2\n * @param {boolean} [options.forceCanvas=false] - prevents selection of WebGL renderer, even if such is present\n * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n *  (shown if not transparent).\n * @param {boolean} [options.clearBeforeRender=true] - This sets if the renderer will clear the canvas or\n *   not before the new render pass.\n * @param {boolean} [options.roundPixels=false] - If true PixiJS will Math.floor() x/y values when rendering,\n *  stopping pixel interpolation.\n * @param {boolean} [options.forceFXAA=false] - forces FXAA antialiasing to be used over native.\n *  FXAA is faster, but may not always look as great **webgl only**\n * @param {boolean} [options.legacy=false] - `true` to ensure compatibility with older / less advanced devices.\n *  If you experience unexplained flickering try setting this to true. **webgl only**\n * @param {string} [options.powerPreference] - Parameter passed to webgl context, set to \"high-performance\"\n *  for devices with dual graphics card **webgl only**\n * @param {boolean} [options.sharedTicker=false] - `true` to use PIXI.ticker.shared, `false` to create new ticker.\n * @param {boolean} [options.sharedLoader=false] - `true` to use PIXI.loaders.shared, `false` to create new Loader.\n *\n * @param {object} options.keyframes bodymovin data, which export from AE by bodymovin\n * @param {number} [options.repeats=0] need repeat some times?\n * @param {boolean} [options.infinite=false] play this animation round and round forever\n * @param {boolean} [options.alternate=false] alternate play direction every round\n * @param {number} [options.wait=0] need wait how much millisecond to start\n * @param {number} [options.delay=0] need delay how much millisecond to begin, effect every loop round\n * @param {number} [options.timeScale=1] animation speed, time scale factor\n * @param {boolean} [options.autoLoad=true] auto load assets, if this animation have\n * @param {boolean} [options.autoStart=true] auto start animation after assets loaded\n * @param {boolean} [options.copyJSON=false] copy json when this lottie data has two parse instance\n * @param {boolean} [options.overlapMode=false] enable overlap mode, it is useful when you have a overlap expression\n * @param {object} [options.segments={}] animation segments, splite by start and end keyframe number\n * @param {boolean} [options.initSegment=''] animation segments, init finite state machine\n * @param {boolean} [options.justDisplayOnImagesLoaded=true] just display group when all images loaded\n * @param {boolean} [options.maskComp=false] add mask for each comp\n * @param {string} [options.prefix=''] assets url prefix, look like link path\n * @return {AnimateApplication} return {@link AnimateApplication} instance\n */\nexport function loadAnimation(options) {\n  // compatible with lottie-web api\n  if (options.container && !options.view) {\n    options.view = options.container;\n  }\n  if (options.animationData && !options.keyframes) {\n    options.keyframes = options.animationData;\n  }\n  if (options.assetsPath && !options.prefix) {\n    options.prefix = options.assetsPath.replace(/images\\/?$/, '');\n  }\n  if (options.initialSegment && !options.initSegment) {\n    options.initSegment = options.initialSegment;\n  }\n  if (Tools.isBoolean(options.autoplay) && !Tools.isBoolean(options.autoStart)) {\n    options.autoStart = options.autoplay;\n  }\n  if (Tools.isBoolean(options.loop) && !Tools.isBoolean(options.infinite)) {\n    options.infinite = options.loop;\n  }\n\n  options.view = Tools.isString(options.view) ? document.querySelector(options.view) : options.view;\n  options.useAESize = Tools.isBoolean(options.useAESize) ? options.useAESize : true;\n\n  const animateApplication = new AnimateApplication(options);\n\n  return animateApplication;\n}\n"],"names":["LottieGraphicsMask","parentCompBox","lineStyle","Graphics","masks","i","viewData","length","inv","size","this","moveTo","lineTo","w","h","data","v","start","jLen","_length","j","oj","o","ij","vj","bezierCurveTo","addHole","clear","beginFill","updateLayerMask","endFill","PreCompMask","viewport","initCompMask","CompElement","lottieElement","config","Container","maskComp","preCompMask","mask","addChild","hasValidMasks","session","local","graphicsMasks","innerDisplay","parent","hierarchy","visible","transform","x","y","pivot","anchorX","anchorY","scale","scaleX","scaleY","rotation","alpha","updateMasks","PrimitiveShader","gl","join","Shader","TypedArray","BufferType","buffer","prototype","reset","destroy","push","arguments","newBuffer","constructor","Math","max","round","set","setBuffer","WebGLGraphicsData","shader","attribsState","vertices","Float32Array","indices","Uint16Array","glCore","GLBuffer","createVertexBuffer","indexBuffer","createIndexBuffer","dirty","vao","VertexArrayObject","addIndex","addAttribute","attributes","aVertexPosition","FLOAT","upload","ARC_RESOLUTION","BEZIER_CURVE_RESOLUTION","getLength","a","b","sqrt","CubicBezier","t","p0","p1","p2","p3","k","points","x1","y1","x2","y2","x3","y3","isFinite","c","d","e","f","x0","y0","lengthEstimate","step","min","PathToPoints","cmds","cmd","args","addArc","radius","startAngle","endAngle","anticlockwise","PI","diff","direction","nrOfInterpolationPoints","dangle","angle","cos","sin","PathToStroke","path","style","toDrawOrNotToDraw","closed","isClosed","useLinedash","lineDash","lineWidthDiv2","lineWidth","array","result","lineDashOffset","currentOffset","dashIndex","draw","newPoints","line","lineLength","progress","pop","prepareLineDash","vertexOffset","vertexProgress","toDrawBuffer","l","normal","lineCap","atan2","toDraw","p2minp1","p1minp0","tangent","dot","miter","lineJoin","miterLimit","sinAngle","n1","n2","pow","PathToShape","empty","LottieGraphicsRenderer","renderer","graphicsDataPool","primitiveShader","webGLData","CONTEXT_UID","ObjectRenderer","call","graphics","getWebGLData","isDirty","updateGraphics","bindShader","state","setBlendMode","blendMode","uniforms","translationMatrix","worldTransform","toArray","color","utils","hex2rgb","worldAlpha","bindVao","TRIANGLES","drawType","buildStroke","buildFill","paths","meshVertices","meshIndices","fillVertices","holes","holeIndices","pathHole","cacheLength","triangles","earcut","attribState","registerPlugin","CanvasLottieGraphicsRenderer","context","resolution","setTransform","tx","ty","globalAlpha","setLineDash","toString","substr","beginPath","drawPath","strokeStyle","stroke","fillStyle","fill","PathCMD","isClockWise","add","cpX","cpY","cpX2","cpY2","toX","toY","LottieGraphics","_samplerPoints","currentPath","BLEND_MODES","NORMAL","firstIsClockWise","preClockWiseStatus","endPath","newPathIsClockWise","contour","n","p","q","area","closePath","setObjectRenderer","plugins","lottiegraphics","render","PathLottie","passMatrix","Matrix","trProps","preTransforms","finalTransform","props","setFromMatrix","setShapeTransform","updateTransform","_bounds","updateID","type","wi","_shouldRender","coOp","shapes","elements","nodes","trNodes","kLen","pts","da","do","lc","lj","ml","Tools","rgb2hex","co","grd","SolidElement","hex","parseInt","replace","drawRect","rect","width","height","preCompBox","SpriteElement","texture","asset","baseTexture","hasLoaded","orig","Rectangle","_updateUvs","on","Sprite","registerDisplayByType","DisplayRegister","Type","Null","Path","Shape","Solid","Component","regHttp","LoadTexture","assets","prefix","autoLoad","textures","_total","_failed","_received","loaded","_this","load","Eventer","forEach","id","url","up","u","test","createUrl","_this2","Texture","fromImage","emit","_onComplete","once","formatResponse","xhr","response","_typeof","JSON","parse","responseText","LoadJson","onSuccess","_this3","bind","onFail","callback","errorCallback","XMLHttpRequest","open","responseType","err","console","error","send","onreadystatechange","readyState","status","loadAjax","registerLoaderByType","LoaderRegister","options","Ajax","bezier","Tween","Linear","None","Ease","In","BezierEasing","get","Out","InOut","Bezier","Elastic","Back","s","Bounce","Animator","element","duration","living","resident","infinite","alternate","repeats","delay","wait","timeScale","isNumber","onComplete","onUpdate","init","paused","Transition","from","to","isUndefined","ease","Bodymovin","dynamicProperties","_mdf","keyframes","copyJSON","frameRate","tpf","ip","op","tfs","ignoreProps","isArray","TransformFrames","ks","Queues","runner","runners","queues","cursor","total","then","Object","create","update","snippet","snippetCache","waitCut","abs","delayCut","pose","isEnd","progressCache","spill","repeatsCut","codomainBounce","euclideanModulo","clamp","nextPose","bottomSpill","topSpill","warn","linear","setSpeed","speed","pause","restart","resume","stop","cancel","undefined","prepareProperties","frameNum","len","getValue","addDynamicProperty","prop","indexOf","nextOne","_","time","_residueTime","initOne","animate","cc","index","Ticker","settings","UPDATE_PRIORITY","animationTicker","ticker","shared","Animations","animates","updateDeltaTime","HIGH","clearAnimators","needClearIdx","idx","splice","deltaTime","TARGET_FPMS","_addMove","bodymovin","clearAll","setupAnimations","animations","defineProperties","DisplayObject","scaleXY","value","pivotX","pivotY","_boundsID","children","child","containerUpdateTransform","AnimateApplication","useAESize","view","transparent","antialias","preserveDrawingBuffer","forceCanvas","backgroundColor","clearBeforeRender","roundPixels","forceFXAA","legacy","powerPreference","sharedTicker","sharedLoader","app","Application","manager","AnimationManager","parseData","resize","parseAnimation","isDisplayLoaded","resizeWithAESize","stage","group","isImagesLoaded","container","animationData","assetsPath","initialSegment","initSegment","isBoolean","autoplay","autoStart","loop","isString","document","querySelector","_ticker"],"mappings":"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"}